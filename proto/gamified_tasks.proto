syntax = "proto3";

package gamified_tasks;

option go_package = "github.com/gamified-tasks/proto";
option java_package = "com.gamified.tasks.proto";
option csharp_namespace = "GamifiedTasks.Proto";

// ============================================================================
// AUTHENTICATION SERVICE
// ============================================================================

service AuthService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
  rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
  rpc ChangeUserPassword(ChangeUserPasswordRequest) returns (ChangeUserPasswordResponse);
  rpc LogoutUser(LogoutUserRequest) returns (LogoutUserResponse);
}

message RegisterUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message RegisterUserResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
  string token = 4;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
  string token = 4;
}

message GetUserProfileRequest {
  string token = 1;
}

message GetUserProfileResponse {
  bool success = 1;
  User user = 2;
}

message UpdateUserProfileRequest {
  string token = 1;
  string name = 2;
  string email = 3;
}

message UpdateUserProfileResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

message ChangeUserPasswordRequest {
  string token = 1;
  string current_password = 2;
  string new_password = 3;
}

message ChangeUserPasswordResponse {
  bool success = 1;
  string message = 2;
}

message LogoutUserRequest {
  string token = 1;
}

message LogoutUserResponse {
  bool success = 1;
  string message = 2;
}

// ============================================================================
// TASK SERVICE
// ============================================================================

service TaskService {
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc GetTaskById(GetTaskByIdRequest) returns (GetTaskByIdResponse);
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);
  rpc CompleteTask(CompleteTaskRequest) returns (CompleteTaskResponse);
  rpc GetTaskStats(GetTaskStatsRequest) returns (GetTaskStatsResponse);
  rpc ListTasksByStatus(ListTasksByStatusRequest) returns (ListTasksByStatusResponse);
}

message ListTasksRequest {
  string token = 1;
  int32 page = 2;
  int32 limit = 3;
  string status = 4;
  string priority = 5;
  string search = 6;
  string sort_by = 7;
  string sort_order = 8;
}

message ListTasksResponse {
  bool success = 1;
  repeated Task tasks = 2;
  Pagination pagination = 3;
}

message CreateTaskRequest {
  string token = 1;
  string title = 2;
  string description = 3;
  string status = 4;
  string priority = 5;
  string due_date = 6;
  repeated string tags = 7;
}

message CreateTaskResponse {
  bool success = 1;
  string message = 2;
  Task task = 3;
}

message GetTaskByIdRequest {
  string token = 1;
  string task_id = 2;
}

message GetTaskByIdResponse {
  bool success = 1;
  Task task = 2;
}

message UpdateTaskRequest {
  string token = 1;
  string task_id = 2;
  string title = 3;
  string description = 4;
  string status = 5;
  string priority = 6;
  string due_date = 7;
  repeated string tags = 8;
}

message UpdateTaskResponse {
  bool success = 1;
  string message = 2;
  Task task = 3;
}

message DeleteTaskRequest {
  string token = 1;
  string task_id = 2;
}

message DeleteTaskResponse {
  bool success = 1;
  string message = 2;
}

message CompleteTaskRequest {
  string token = 1;
  string task_id = 2;
}

message CompleteTaskResponse {
  bool success = 1;
  string message = 2;
  Task task = 3;
}

message GetTaskStatsRequest {
  string token = 1;
}

message GetTaskStatsResponse {
  bool success = 1;
  TaskStats stats = 2;
}

message ListTasksByStatusRequest {
  string token = 1;
  string status = 2;
  int32 page = 3;
  int32 limit = 4;
}

message ListTasksByStatusResponse {
  bool success = 1;
  repeated Task tasks = 2;
  Pagination pagination = 3;
}

// ============================================================================
// GAMIFICATION SERVICE
// ============================================================================

service GamificationService {
  rpc CreateStoryFromTasks(CreateStoryFromTasksRequest) returns (CreateStoryFromTasksResponse);
  rpc CompleteQuest(CompleteQuestRequest) returns (CompleteQuestResponse);
  rpc ListStories(ListStoriesRequest) returns (ListStoriesResponse);
  rpc GetStoryById(GetStoryByIdRequest) returns (GetStoryByIdResponse);
  rpc GetLeaderboard(GetLeaderboardRequest) returns (GetLeaderboardResponse);
  rpc GetGamificationDashboard(GetGamificationDashboardRequest) returns (GetGamificationDashboardResponse);
  rpc GetBadges(GetBadgesRequest) returns (GetBadgesResponse);
  rpc UpdateGamificationPreferences(UpdateGamificationPreferencesRequest) returns (UpdateGamificationPreferencesResponse);
  rpc ShareMilestone(ShareMilestoneRequest) returns (ShareMilestoneResponse);
  rpc GetGlobalStats(GetGlobalStatsRequest) returns (GetGlobalStatsResponse);
}

message CreateStoryFromTasksRequest {
  string token = 1;
  repeated string task_ids = 2;
  UserPreferences user_preferences = 3;
}

message CreateStoryFromTasksResponse {
  bool success = 1;
  string message = 2;
  Story story = 3;
  repeated Quest quests = 4;
}

message CompleteQuestRequest {
  string token = 1;
  string task_id = 2;
  int32 completion_time = 3;
}

message CompleteQuestResponse {
  bool success = 1;
  string message = 2;
  Task task = 3;
  GamificationData gamification = 4;
}

message ListStoriesRequest {
  string token = 1;
  bool active = 2;
  int32 limit = 3;
  int32 page = 4;
}

message ListStoriesResponse {
  bool success = 1;
  repeated Story stories = 2;
  Pagination pagination = 3;
}

message GetStoryByIdRequest {
  string token = 1;
  string story_id = 2;
}

message GetStoryByIdResponse {
  bool success = 1;
  Story story = 2;
}

message GetLeaderboardRequest {
  int32 limit = 1;
}

message GetLeaderboardResponse {
  bool success = 1;
  repeated LeaderboardEntry leaderboard = 2;
}

message GetGamificationDashboardRequest {
  string token = 1;
}

message GetGamificationDashboardResponse {
  bool success = 1;
  User user = 2;
  GamificationStats stats = 3;
}

message GetBadgesRequest {
  string token = 1;
}

message GetBadgesResponse {
  bool success = 1;
  repeated Badge available = 2;
  repeated Badge earned = 3;
  int32 total = 4;
  int32 earned_count = 5;
}

message UpdateGamificationPreferencesRequest {
  string token = 1;
  string character_class = 2;
  string story_theme = 3;
  bool auto_share = 4;
  bool share_on_level_up = 5;
  bool share_on_badge = 6;
}

message UpdateGamificationPreferencesResponse {
  bool success = 1;
  string message = 2;
  UserPreferences preferences = 3;
}

message ShareMilestoneRequest {
  string token = 1;
  string type = 2;
  MilestoneData data = 3;
}

message ShareMilestoneResponse {
  bool success = 1;
  string message = 2;
}

message GetGlobalStatsRequest {}

message GetGlobalStatsResponse {
  bool success = 1;
  GlobalStats stats = 2;
}

// ============================================================================
// ADMIN SERVICE
// ============================================================================

service AdminService {
  rpc GetUserStats(GetUserStatsRequest) returns (GetUserStatsResponse);
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ToggleUserStatus(ToggleUserStatusRequest) returns (ToggleUserStatusResponse);
}

message GetUserStatsRequest {
  string token = 1;
}

message GetUserStatsResponse {
  bool success = 1;
  AdminStats stats = 2;
}

message GetAllUsersRequest {
  string token = 1;
  int32 page = 2;
  int32 limit = 3;
}

message GetAllUsersResponse {
  bool success = 1;
  repeated User users = 2;
  Pagination pagination = 3;
}

message GetUserByIdRequest {
  string token = 1;
  string user_id = 2;
}

message GetUserByIdResponse {
  bool success = 1;
  User user = 2;
}

message UpdateUserRequest {
  string token = 1;
  string user_id = 2;
  string name = 3;
  string email = 4;
  string role = 5;
}

message UpdateUserResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

message DeleteUserRequest {
  string token = 1;
  string user_id = 2;
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

message ToggleUserStatusRequest {
  string token = 1;
  string user_id = 2;
}

message ToggleUserStatusResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

// ============================================================================
// DATA MODELS
// ============================================================================

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string role = 4;
  bool is_active = 5;
  string created_at = 6;
  string updated_at = 7;
  Gamification gamification = 8;
}

message Gamification {
  int32 level = 1;
  int32 total_xp = 2;
  int32 current_streak = 3;
  int32 longest_streak = 4;
  repeated Badge badges = 5;
  GamificationStats stats = 6;
  UserPreferences preferences = 7;
}

message Task {
  string id = 1;
  string title = 2;
  string description = 3;
  string status = 4;
  string priority = 5;
  string due_date = 6;
  repeated string tags = 7;
  string created_at = 8;
  string updated_at = 9;
  string user_id = 10;
  QuestData quest = 11;
}

message QuestData {
  string quest_title = 1;
  string quest_description = 2;
  string difficulty = 3;
  int32 xp_reward = 4;
  string category = 5;
  string story_id = 6;
}

message Story {
  string id = 1;
  string title = 2;
  string narrative = 3;
  string theme = 4;
  int32 total_xp = 5;
  string estimated_play_time = 6;
  repeated Quest quests = 7;
  bool is_active = 8;
  string created_at = 9;
  string user_id = 10;
}

message Quest {
  string id = 1;
  string quest_title = 2;
  string quest_description = 3;
  string difficulty = 4;
  int32 xp = 5;
  string category = 6;
  string task_id = 7;
  bool completed = 8;
}

message Badge {
  string id = 1;
  string name = 2;
  string description = 3;
  string icon = 4;
  string category = 5;
  int32 xp_required = 6;
  string earned_at = 7;
}

message UserPreferences {
  string character_class = 1;
  string story_theme = 2;
  bool auto_share = 3;
  bool share_on_level_up = 4;
  bool share_on_badge = 5;
}

message Pagination {
  int32 current = 1;
  int32 pages = 2;
  int32 total = 3;
  int32 limit = 4;
}

message TaskStats {
  int32 total = 1;
  int32 completed = 2;
  int32 pending = 3;
  int32 in_progress = 4;
  double completion_rate = 5;
}

message GamificationStats {
  int32 tasks_completed = 1;
  int32 stories_created = 2;
  int32 quests_completed = 3;
  int32 badges_earned = 4;
  int32 current_level = 5;
  int32 total_xp = 6;
}

message GamificationData {
  int32 xp_gained = 1;
  bool leveled_up = 2;
  int32 new_level = 3;
  repeated Badge new_badges = 4;
  int32 total_xp = 5;
  int32 current_streak = 6;
}

message LeaderboardEntry {
  string user_id = 1;
  string name = 2;
  int32 level = 3;
  int32 total_xp = 4;
  int32 rank = 5;
}

message MilestoneData {
  int32 level = 1;
  Badge badge = 2;
  int32 streak = 3;
  string message = 4;
}

message GlobalStats {
  UserStats users = 1;
  GamificationStats gamification = 2;
  StoryStats stories = 3;
}

message UserStats {
  int32 total = 1;
  double average_level = 2;
}

message StoryStats {
  int32 total_stories = 1;
  int32 total_quests = 2;
  int32 completed_stories = 3;
  double completion_rate = 4;
}

message AdminStats {
  UserStats users = 1;
  TaskStats tasks = 2;
  repeated User most_active_users = 3;
} 