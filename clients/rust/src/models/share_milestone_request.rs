/*
 * Gamified Task Management API
 *
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShareMilestoneRequest {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::ShareMilestoneRequestData>>,
}

impl ShareMilestoneRequest {
    pub fn new(r#type: Type) -> ShareMilestoneRequest {
        ShareMilestoneRequest {
            r#type,
            data: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "level_up")]
    LevelUp,
    #[serde(rename = "badge_earned")]
    BadgeEarned,
    #[serde(rename = "streak_milestone")]
    StreakMilestone,
    #[serde(rename = "custom")]
    Custom,
}

impl Default for Type {
    fn default() -> Type {
        Self::LevelUp
    }
}

