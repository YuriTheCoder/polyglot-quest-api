/*
 * Gamified Task Management API
 *
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompleteQuest200ResponseDataGamification {
    #[serde(rename = "xpGained", skip_serializing_if = "Option::is_none")]
    pub xp_gained: Option<f64>,
    #[serde(rename = "leveledUp", skip_serializing_if = "Option::is_none")]
    pub leveled_up: Option<bool>,
    #[serde(rename = "newLevel", skip_serializing_if = "Option::is_none")]
    pub new_level: Option<f64>,
    #[serde(rename = "newBadges", skip_serializing_if = "Option::is_none")]
    pub new_badges: Option<Vec<String>>,
    #[serde(rename = "totalXP", skip_serializing_if = "Option::is_none")]
    pub total_xp: Option<f64>,
    #[serde(rename = "currentStreak", skip_serializing_if = "Option::is_none")]
    pub current_streak: Option<f64>,
}

impl CompleteQuest200ResponseDataGamification {
    pub fn new() -> CompleteQuest200ResponseDataGamification {
        CompleteQuest200ResponseDataGamification {
            xp_gained: None,
            leveled_up: None,
            new_level: None,
            new_badges: None,
            total_xp: None,
            current_streak: None,
        }
    }
}

