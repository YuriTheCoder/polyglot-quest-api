/*
 * Gamified Task Management API
 *
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBadges200ResponseData {
    #[serde(rename = "earned", skip_serializing_if = "Option::is_none")]
    pub earned: Option<Vec<models::GetBadges200ResponseDataEarnedInner>>,
    #[serde(rename = "available", skip_serializing_if = "Option::is_none")]
    pub available: Option<Vec<serde_json::Value>>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    #[serde(rename = "earnedCount", skip_serializing_if = "Option::is_none")]
    pub earned_count: Option<f64>,
}

impl GetBadges200ResponseData {
    pub fn new() -> GetBadges200ResponseData {
        GetBadges200ResponseData {
            earned: None,
            available: None,
            total: None,
            earned_count: None,
        }
    }
}

