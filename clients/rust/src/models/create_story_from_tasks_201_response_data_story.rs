/*
 * Gamified Task Management API
 *
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateStoryFromTasks201ResponseDataStory {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "story", skip_serializing_if = "Option::is_none")]
    pub story: Option<String>,
    #[serde(rename = "theme", skip_serializing_if = "Option::is_none")]
    pub theme: Option<String>,
    #[serde(rename = "totalXP", skip_serializing_if = "Option::is_none")]
    pub total_xp: Option<f64>,
    #[serde(rename = "estimatedPlayTime", skip_serializing_if = "Option::is_none")]
    pub estimated_play_time: Option<String>,
}

impl CreateStoryFromTasks201ResponseDataStory {
    pub fn new() -> CreateStoryFromTasks201ResponseDataStory {
        CreateStoryFromTasks201ResponseDataStory {
            id: None,
            title: None,
            story: None,
            theme: None,
            total_xp: None,
            estimated_play_time: None,
        }
    }
}

