/*
 * Gamified Task Management API
 *
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateStoryFromTasks201ResponseDataQuestsInner {
    #[serde(rename = "questTitle", skip_serializing_if = "Option::is_none")]
    pub quest_title: Option<String>,
    #[serde(rename = "questDescription", skip_serializing_if = "Option::is_none")]
    pub quest_description: Option<String>,
    #[serde(rename = "difficulty", skip_serializing_if = "Option::is_none")]
    pub difficulty: Option<String>,
    #[serde(rename = "xp", skip_serializing_if = "Option::is_none")]
    pub xp: Option<f64>,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
}

impl CreateStoryFromTasks201ResponseDataQuestsInner {
    pub fn new() -> CreateStoryFromTasks201ResponseDataQuestsInner {
        CreateStoryFromTasks201ResponseDataQuestsInner {
            quest_title: None,
            quest_description: None,
            difficulty: None,
            xp: None,
            category: None,
        }
    }
}

