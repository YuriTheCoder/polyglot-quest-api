/**
 * Gamified Task Management API
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompleteQuest200ResponseDataGamification model module.
 * @module model/CompleteQuest200ResponseDataGamification
 * @version 1.0.0
 */
class CompleteQuest200ResponseDataGamification {
    /**
     * Constructs a new <code>CompleteQuest200ResponseDataGamification</code>.
     * @alias module:model/CompleteQuest200ResponseDataGamification
     */
    constructor() { 
        
        CompleteQuest200ResponseDataGamification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompleteQuest200ResponseDataGamification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompleteQuest200ResponseDataGamification} obj Optional instance to populate.
     * @return {module:model/CompleteQuest200ResponseDataGamification} The populated <code>CompleteQuest200ResponseDataGamification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompleteQuest200ResponseDataGamification();

            if (data.hasOwnProperty('xpGained')) {
                obj['xpGained'] = ApiClient.convertToType(data['xpGained'], 'Number');
            }
            if (data.hasOwnProperty('leveledUp')) {
                obj['leveledUp'] = ApiClient.convertToType(data['leveledUp'], 'Boolean');
            }
            if (data.hasOwnProperty('newLevel')) {
                obj['newLevel'] = ApiClient.convertToType(data['newLevel'], 'Number');
            }
            if (data.hasOwnProperty('newBadges')) {
                obj['newBadges'] = ApiClient.convertToType(data['newBadges'], ['String']);
            }
            if (data.hasOwnProperty('totalXP')) {
                obj['totalXP'] = ApiClient.convertToType(data['totalXP'], 'Number');
            }
            if (data.hasOwnProperty('currentStreak')) {
                obj['currentStreak'] = ApiClient.convertToType(data['currentStreak'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompleteQuest200ResponseDataGamification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompleteQuest200ResponseDataGamification</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['newBadges'])) {
            throw new Error("Expected the field `newBadges` to be an array in the JSON data but got " + data['newBadges']);
        }

        return true;
    }


}



/**
 * @member {Number} xpGained
 */
CompleteQuest200ResponseDataGamification.prototype['xpGained'] = undefined;

/**
 * @member {Boolean} leveledUp
 */
CompleteQuest200ResponseDataGamification.prototype['leveledUp'] = undefined;

/**
 * @member {Number} newLevel
 */
CompleteQuest200ResponseDataGamification.prototype['newLevel'] = undefined;

/**
 * @member {Array.<String>} newBadges
 */
CompleteQuest200ResponseDataGamification.prototype['newBadges'] = undefined;

/**
 * @member {Number} totalXP
 */
CompleteQuest200ResponseDataGamification.prototype['totalXP'] = undefined;

/**
 * @member {Number} currentStreak
 */
CompleteQuest200ResponseDataGamification.prototype['currentStreak'] = undefined;






export default CompleteQuest200ResponseDataGamification;

