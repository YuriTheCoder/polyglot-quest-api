/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.UsersApi
import org.openapitools.client.models.DeleteUser200Response
import org.openapitools.client.models.Error
import org.openapitools.client.models.GetAllUsers200Response
import org.openapitools.client.models.GetUserById200Response
import org.openapitools.client.models.GetUserStats200Response
import org.openapitools.client.models.ToggleUserStatus200Response
import org.openapitools.client.models.UpdateUser200Response
import org.openapitools.client.models.UpdateUserRequest

class UsersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UsersApi
        //val apiInstance = UsersApi()

        // to test deleteUser
        should("test deleteUser") {
            // uncomment below to test deleteUser
            //val id : kotlin.String = id_example // kotlin.String | ID do usuário
            //val result : DeleteUser200Response = apiInstance.deleteUser(id)
            //result shouldBe ("TODO")
        }

        // to test getAllUsers
        should("test getAllUsers") {
            // uncomment below to test getAllUsers
            //val page : kotlin.Int = 56 // kotlin.Int | Número da página
            //val limit : kotlin.Int = 56 // kotlin.Int | Itens por página
            //val search : kotlin.String = search_example // kotlin.String | Buscar por nome ou email
            //val role : kotlin.String = role_example // kotlin.String | Filtrar por papel
            //val isActive : kotlin.Boolean = true // kotlin.Boolean | Filtrar por status ativo
            //val result : GetAllUsers200Response = apiInstance.getAllUsers(page, limit, search, role, isActive)
            //result shouldBe ("TODO")
        }

        // to test getUserById
        should("test getUserById") {
            // uncomment below to test getUserById
            //val id : kotlin.String = id_example // kotlin.String | ID do usuário
            //val result : GetUserById200Response = apiInstance.getUserById(id)
            //result shouldBe ("TODO")
        }

        // to test getUserStats
        should("test getUserStats") {
            // uncomment below to test getUserStats
            //val result : GetUserStats200Response = apiInstance.getUserStats()
            //result shouldBe ("TODO")
        }

        // to test toggleUserStatus
        should("test toggleUserStatus") {
            // uncomment below to test toggleUserStatus
            //val id : kotlin.String = id_example // kotlin.String | ID do usuário
            //val result : ToggleUserStatus200Response = apiInstance.toggleUserStatus(id)
            //result shouldBe ("TODO")
        }

        // to test updateUser
        should("test updateUser") {
            // uncomment below to test updateUser
            //val id : kotlin.String = id_example // kotlin.String | ID do usuário
            //val updateUserRequest : UpdateUserRequest =  // UpdateUserRequest | 
            //val result : UpdateUser200Response = apiInstance.updateUser(id, updateUserRequest)
            //result shouldBe ("TODO")
        }

    }
}
