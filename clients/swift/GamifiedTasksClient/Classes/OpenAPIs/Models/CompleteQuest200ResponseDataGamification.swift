//
// CompleteQuest200ResponseDataGamification.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CompleteQuest200ResponseDataGamification: Codable, JSONEncodable, Hashable {

    public var xpGained: Double?
    public var leveledUp: Bool?
    public var newLevel: Double?
    public var newBadges: [String]?
    public var totalXP: Double?
    public var currentStreak: Double?

    public init(xpGained: Double? = nil, leveledUp: Bool? = nil, newLevel: Double? = nil, newBadges: [String]? = nil, totalXP: Double? = nil, currentStreak: Double? = nil) {
        self.xpGained = xpGained
        self.leveledUp = leveledUp
        self.newLevel = newLevel
        self.newBadges = newBadges
        self.totalXP = totalXP
        self.currentStreak = currentStreak
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case xpGained
        case leveledUp
        case newLevel
        case newBadges
        case totalXP
        case currentStreak
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(xpGained, forKey: .xpGained)
        try container.encodeIfPresent(leveledUp, forKey: .leveledUp)
        try container.encodeIfPresent(newLevel, forKey: .newLevel)
        try container.encodeIfPresent(newBadges, forKey: .newBadges)
        try container.encodeIfPresent(totalXP, forKey: .totalXP)
        try container.encodeIfPresent(currentStreak, forKey: .currentStreak)
    }
}

