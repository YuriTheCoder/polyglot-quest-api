# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_users_get200_response_data import ApiUsersGet200ResponseData

class TestApiUsersGet200ResponseData(unittest.TestCase):
    """ApiUsersGet200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiUsersGet200ResponseData:
        """Test ApiUsersGet200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiUsersGet200ResponseData`
        """
        model = ApiUsersGet200ResponseData()
        if include_optional:
            return ApiUsersGet200ResponseData(
                users = [
                    openapi_client.models.user.User(
                        id = '64a1b2c3d4e5f6789abcdef0', 
                        name = 'Yuri Dev', 
                        email = 'yuri.dev@example.com', 
                        role = 'user', 
                        is_active = True, 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        gamification = openapi_client.models.user_gamification.User_gamification(
                            level = 5, 
                            total_xp = 450, ), )
                    ],
                pagination = openapi_client.models._api_users_get_200_response_data_pagination._api_users_get_200_response_data_pagination(
                    current = 1, 
                    pages = 15, 
                    total = 150, 
                    limit = 10, )
            )
        else:
            return ApiUsersGet200ResponseData(
        )
        """

    def testApiUsersGet200ResponseData(self):
        """Test ApiUsersGet200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
