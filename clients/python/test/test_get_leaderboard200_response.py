# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_leaderboard200_response import GetLeaderboard200Response

class TestGetLeaderboard200Response(unittest.TestCase):
    """GetLeaderboard200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetLeaderboard200Response:
        """Test GetLeaderboard200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetLeaderboard200Response`
        """
        model = GetLeaderboard200Response()
        if include_optional:
            return GetLeaderboard200Response(
                success = True,
                data = openapi_client.models.get_leaderboard_200_response_data.getLeaderboard_200_response_data(
                    leaderboard = [
                        openapi_client.models.get_leaderboard_200_response_data_leaderboard_inner.getLeaderboard_200_response_data_leaderboard_inner(
                            rank = 1, 
                            username = 'GamerPro123', 
                            level = 15, 
                            total_xp = 1450, 
                            tasks_completed = 87, 
                            current_streak = 12, 
                            badges = 8, )
                        ], 
                    period = 'all', 
                    total = 10, )
            )
        else:
            return GetLeaderboard200Response(
        )
        """

    def testGetLeaderboard200Response(self):
        """Test GetLeaderboard200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
