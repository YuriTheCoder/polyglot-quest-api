# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_gamification_preferences_put200_response import ApiGamificationPreferencesPut200Response

class TestApiGamificationPreferencesPut200Response(unittest.TestCase):
    """ApiGamificationPreferencesPut200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiGamificationPreferencesPut200Response:
        """Test ApiGamificationPreferencesPut200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiGamificationPreferencesPut200Response`
        """
        model = ApiGamificationPreferencesPut200Response()
        if include_optional:
            return ApiGamificationPreferencesPut200Response(
                success = True,
                message = '',
                data = openapi_client.models._api_gamification_preferences_put_200_response_data._api_gamification_preferences_put_200_response_data(
                    preferences = openapi_client.models.preferences.preferences(), )
            )
        else:
            return ApiGamificationPreferencesPut200Response(
        )
        """

    def testApiGamificationPreferencesPut200Response(self):
        """Test ApiGamificationPreferencesPut200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
