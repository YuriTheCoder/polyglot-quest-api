# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_users_id_toggle_status_patch200_response_data import ApiUsersIdToggleStatusPatch200ResponseData

class TestApiUsersIdToggleStatusPatch200ResponseData(unittest.TestCase):
    """ApiUsersIdToggleStatusPatch200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiUsersIdToggleStatusPatch200ResponseData:
        """Test ApiUsersIdToggleStatusPatch200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiUsersIdToggleStatusPatch200ResponseData`
        """
        model = ApiUsersIdToggleStatusPatch200ResponseData()
        if include_optional:
            return ApiUsersIdToggleStatusPatch200ResponseData(
                user = openapi_client.models._api_users__id__toggle_status_patch_200_response_data_user._api_users__id__toggle_status_patch_200_response_data_user(
                    id = '', 
                    name = '', 
                    email = '', 
                    is_active = True, )
            )
        else:
            return ApiUsersIdToggleStatusPatch200ResponseData(
        )
        """

    def testApiUsersIdToggleStatusPatch200ResponseData(self):
        """Test ApiUsersIdToggleStatusPatch200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
