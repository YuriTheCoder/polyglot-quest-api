# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_gamification_preferences_request import UpdateGamificationPreferencesRequest

class TestUpdateGamificationPreferencesRequest(unittest.TestCase):
    """UpdateGamificationPreferencesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateGamificationPreferencesRequest:
        """Test UpdateGamificationPreferencesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateGamificationPreferencesRequest`
        """
        model = UpdateGamificationPreferencesRequest()
        if include_optional:
            return UpdateGamificationPreferencesRequest(
                var_class = 'Guerreiro',
                theme = 'medieval',
                auto_share = False,
                share_on_level_up = True,
                share_on_badge = True
            )
        else:
            return UpdateGamificationPreferencesRequest(
        )
        """

    def testUpdateGamificationPreferencesRequest(self):
        """Test UpdateGamificationPreferencesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
