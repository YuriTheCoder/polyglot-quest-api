# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_global_stats200_response import GetGlobalStats200Response

class TestGetGlobalStats200Response(unittest.TestCase):
    """GetGlobalStats200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetGlobalStats200Response:
        """Test GetGlobalStats200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetGlobalStats200Response`
        """
        model = GetGlobalStats200Response()
        if include_optional:
            return GetGlobalStats200Response(
                success = True,
                data = openapi_client.models.get_global_stats_200_response_data.getGlobalStats_200_response_data(
                    users = openapi_client.models.get_global_stats_200_response_data_users.getGlobalStats_200_response_data_users(
                        total = 1.337, 
                        average_level = 1.337, ), 
                    gamification = openapi_client.models.get_global_stats_200_response_data_gamification.getGlobalStats_200_response_data_gamification(
                        total_xp = 1.337, 
                        total_tasks_completed = 1.337, 
                        total_badges_earned = 1.337, 
                        longest_streak = 1.337, ), 
                    stories = openapi_client.models.get_global_stats_200_response_data_stories.getGlobalStats_200_response_data_stories(
                        total_stories = 1.337, 
                        total_quests = 1.337, 
                        completed_stories = 1.337, 
                        completion_rate = 1.337, ), )
            )
        else:
            return GetGlobalStats200Response(
        )
        """

    def testGetGlobalStats200Response(self):
        """Test GetGlobalStats200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
