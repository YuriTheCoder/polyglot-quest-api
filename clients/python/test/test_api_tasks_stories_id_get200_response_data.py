# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_tasks_stories_id_get200_response_data import ApiTasksStoriesIdGet200ResponseData

class TestApiTasksStoriesIdGet200ResponseData(unittest.TestCase):
    """ApiTasksStoriesIdGet200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiTasksStoriesIdGet200ResponseData:
        """Test ApiTasksStoriesIdGet200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiTasksStoriesIdGet200ResponseData`
        """
        model = ApiTasksStoriesIdGet200ResponseData()
        if include_optional:
            return ApiTasksStoriesIdGet200ResponseData(
                story = openapi_client.models.story.Story(
                    id = '64a1b2c3d4e5f6789abcdef2', 
                    title = 'A Batalha contra o Bug Monstruoso', 
                    story = 'Nas profundezas do código, um bug terrível despertou...', 
                    theme = 'medieval', 
                    progress = 50, )
            )
        else:
            return ApiTasksStoriesIdGet200ResponseData(
        )
        """

    def testApiTasksStoriesIdGet200ResponseData(self):
        """Test ApiTasksStoriesIdGet200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
