# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_gamification_global_stats_get200_response_data import ApiGamificationGlobalStatsGet200ResponseData

class TestApiGamificationGlobalStatsGet200ResponseData(unittest.TestCase):
    """ApiGamificationGlobalStatsGet200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiGamificationGlobalStatsGet200ResponseData:
        """Test ApiGamificationGlobalStatsGet200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiGamificationGlobalStatsGet200ResponseData`
        """
        model = ApiGamificationGlobalStatsGet200ResponseData()
        if include_optional:
            return ApiGamificationGlobalStatsGet200ResponseData(
                users = openapi_client.models._api_gamification_global_stats_get_200_response_data_users._api_gamification_global_stats_get_200_response_data_users(
                    total = 1.337, 
                    average_level = 1.337, ),
                gamification = openapi_client.models._api_gamification_global_stats_get_200_response_data_gamification._api_gamification_global_stats_get_200_response_data_gamification(
                    total_xp = 1.337, 
                    total_tasks_completed = 1.337, 
                    total_badges_earned = 1.337, 
                    longest_streak = 1.337, ),
                stories = openapi_client.models._api_gamification_global_stats_get_200_response_data_stories._api_gamification_global_stats_get_200_response_data_stories(
                    total_stories = 1.337, 
                    total_quests = 1.337, 
                    completed_stories = 1.337, 
                    completion_rate = 1.337, )
            )
        else:
            return ApiGamificationGlobalStatsGet200ResponseData(
        )
        """

    def testApiGamificationGlobalStatsGet200ResponseData(self):
        """Test ApiGamificationGlobalStatsGet200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
