# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_story_from_tasks201_response import CreateStoryFromTasks201Response

class TestCreateStoryFromTasks201Response(unittest.TestCase):
    """CreateStoryFromTasks201Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateStoryFromTasks201Response:
        """Test CreateStoryFromTasks201Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateStoryFromTasks201Response`
        """
        model = CreateStoryFromTasks201Response()
        if include_optional:
            return CreateStoryFromTasks201Response(
                success = True,
                message = 'História épica gerada com sucesso!',
                data = openapi_client.models.create_story_from_tasks_201_response_data.createStoryFromTasks_201_response_data(
                    story = openapi_client.models.create_story_from_tasks_201_response_data_story.createStoryFromTasks_201_response_data_story(
                        id = '', 
                        title = '', 
                        theme = '', 
                        total_xp = 1.337, 
                        estimated_play_time = '', ), 
                    quests = [
                        openapi_client.models.create_story_from_tasks_201_response_data_quests_inner.createStoryFromTasks_201_response_data_quests_inner(
                            quest_title = '', 
                            quest_description = '', 
                            difficulty = '', 
                            xp = 1.337, 
                            category = '', )
                        ], )
            )
        else:
            return CreateStoryFromTasks201Response(
        )
        """

    def testCreateStoryFromTasks201Response(self):
        """Test CreateStoryFromTasks201Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
