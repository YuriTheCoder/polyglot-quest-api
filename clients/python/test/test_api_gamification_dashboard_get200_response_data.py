# coding: utf-8

"""
    Gamified Task Management API

    API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_gamification_dashboard_get200_response_data import ApiGamificationDashboardGet200ResponseData

class TestApiGamificationDashboardGet200ResponseData(unittest.TestCase):
    """ApiGamificationDashboardGet200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiGamificationDashboardGet200ResponseData:
        """Test ApiGamificationDashboardGet200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiGamificationDashboardGet200ResponseData`
        """
        model = ApiGamificationDashboardGet200ResponseData()
        if include_optional:
            return ApiGamificationDashboardGet200ResponseData(
                user = openapi_client.models._api_gamification_dashboard_get_200_response_data_user._api_gamification_dashboard_get_200_response_data_user(
                    username = '', 
                    level = 1.337, 
                    total_xp = 1.337, 
                    rank = 1.337, ),
                stats = openapi_client.models._api_gamification_dashboard_get_200_response_data_stats._api_gamification_dashboard_get_200_response_data_stats(
                    level = 1.337, 
                    total_xp = 1.337, 
                    tasks_completed = 1.337, 
                    current_streak = 1.337, 
                    longest_streak = 1.337, 
                    badges = [
                        ''
                        ], 
                    next_level = openapi_client.models.next_level.nextLevel(), ),
                stories = None,
                recent_achievements = [
                    ''
                    ],
                active_stories = [
                    ''
                    ]
            )
        else:
            return ApiGamificationDashboardGet200ResponseData(
        )
        """

    def testApiGamificationDashboardGet200ResponseData(self):
        """Test ApiGamificationDashboardGet200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
