/*
 * Gamified Task Management API
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTasksGet200Response;
import org.openapitools.client.model.ApiTasksIdCompletePatch200Response;
import org.openapitools.client.model.ApiTasksIdDelete200Response;
import org.openapitools.client.model.ApiTasksIdGet200Response;
import org.openapitools.client.model.ApiTasksIdPut200Response;
import org.openapitools.client.model.ApiTasksIdPutRequest;
import org.openapitools.client.model.ApiTasksPost201Response;
import org.openapitools.client.model.ApiTasksPostRequest;
import org.openapitools.client.model.ApiTasksStatsGet200Response;
import org.openapitools.client.model.ApiTasksStatusStatusGet200Response;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    /**
     * Listar tarefas do usuário
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksGetTest() throws ApiException {
        String status = null;
        String priority = null;
        Integer page = null;
        Integer limit = null;
        String sortBy = null;
        String sortOrder = null;
        String search = null;
        ApiTasksGet200Response response = api.apiTasksGet(status, priority, page, limit, sortBy, sortOrder, search);
        // TODO: test validations
    }

    /**
     * Marcar tarefa como concluída
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksIdCompletePatchTest() throws ApiException {
        String id = null;
        ApiTasksIdCompletePatch200Response response = api.apiTasksIdCompletePatch(id);
        // TODO: test validations
    }

    /**
     * Deletar tarefa
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksIdDeleteTest() throws ApiException {
        String id = null;
        ApiTasksIdDelete200Response response = api.apiTasksIdDelete(id);
        // TODO: test validations
    }

    /**
     * Obter tarefa específica
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksIdGetTest() throws ApiException {
        String id = null;
        ApiTasksIdGet200Response response = api.apiTasksIdGet(id);
        // TODO: test validations
    }

    /**
     * Atualizar tarefa
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksIdPutTest() throws ApiException {
        String id = null;
        ApiTasksIdPutRequest apiTasksIdPutRequest = null;
        ApiTasksIdPut200Response response = api.apiTasksIdPut(id, apiTasksIdPutRequest);
        // TODO: test validations
    }

    /**
     * Criar nova tarefa
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksPostTest() throws ApiException {
        ApiTasksPostRequest apiTasksPostRequest = null;
        ApiTasksPost201Response response = api.apiTasksPost(apiTasksPostRequest);
        // TODO: test validations
    }

    /**
     * Obter estatísticas das tarefas do usuário
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksStatsGetTest() throws ApiException {
        ApiTasksStatsGet200Response response = api.apiTasksStatsGet();
        // TODO: test validations
    }

    /**
     * Buscar tarefas por status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTasksStatusStatusGetTest() throws ApiException {
        String status = null;
        Integer page = null;
        Integer limit = null;
        ApiTasksStatusStatusGet200Response response = api.apiTasksStatusStatusGet(status, page, limit);
        // TODO: test validations
    }

}
