/*
 * Gamified Task Management API
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiGamificationGlobalStatsGet200ResponseDataGamification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-14T22:25:20.364832200-03:00[America/Sao_Paulo]", comments = "Generator version: 7.13.0")
public class ApiGamificationGlobalStatsGet200ResponseDataGamification {
  public static final String SERIALIZED_NAME_TOTAL_X_P = "totalXP";
  @SerializedName(SERIALIZED_NAME_TOTAL_X_P)
  @javax.annotation.Nullable
  private BigDecimal totalXP;

  public static final String SERIALIZED_NAME_TOTAL_TASKS_COMPLETED = "totalTasksCompleted";
  @SerializedName(SERIALIZED_NAME_TOTAL_TASKS_COMPLETED)
  @javax.annotation.Nullable
  private BigDecimal totalTasksCompleted;

  public static final String SERIALIZED_NAME_TOTAL_BADGES_EARNED = "totalBadgesEarned";
  @SerializedName(SERIALIZED_NAME_TOTAL_BADGES_EARNED)
  @javax.annotation.Nullable
  private BigDecimal totalBadgesEarned;

  public static final String SERIALIZED_NAME_LONGEST_STREAK = "longestStreak";
  @SerializedName(SERIALIZED_NAME_LONGEST_STREAK)
  @javax.annotation.Nullable
  private BigDecimal longestStreak;

  public ApiGamificationGlobalStatsGet200ResponseDataGamification() {
  }

  public ApiGamificationGlobalStatsGet200ResponseDataGamification totalXP(@javax.annotation.Nullable BigDecimal totalXP) {
    this.totalXP = totalXP;
    return this;
  }

  /**
   * Get totalXP
   * @return totalXP
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalXP() {
    return totalXP;
  }

  public void setTotalXP(@javax.annotation.Nullable BigDecimal totalXP) {
    this.totalXP = totalXP;
  }


  public ApiGamificationGlobalStatsGet200ResponseDataGamification totalTasksCompleted(@javax.annotation.Nullable BigDecimal totalTasksCompleted) {
    this.totalTasksCompleted = totalTasksCompleted;
    return this;
  }

  /**
   * Get totalTasksCompleted
   * @return totalTasksCompleted
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalTasksCompleted() {
    return totalTasksCompleted;
  }

  public void setTotalTasksCompleted(@javax.annotation.Nullable BigDecimal totalTasksCompleted) {
    this.totalTasksCompleted = totalTasksCompleted;
  }


  public ApiGamificationGlobalStatsGet200ResponseDataGamification totalBadgesEarned(@javax.annotation.Nullable BigDecimal totalBadgesEarned) {
    this.totalBadgesEarned = totalBadgesEarned;
    return this;
  }

  /**
   * Get totalBadgesEarned
   * @return totalBadgesEarned
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBadgesEarned() {
    return totalBadgesEarned;
  }

  public void setTotalBadgesEarned(@javax.annotation.Nullable BigDecimal totalBadgesEarned) {
    this.totalBadgesEarned = totalBadgesEarned;
  }


  public ApiGamificationGlobalStatsGet200ResponseDataGamification longestStreak(@javax.annotation.Nullable BigDecimal longestStreak) {
    this.longestStreak = longestStreak;
    return this;
  }

  /**
   * Get longestStreak
   * @return longestStreak
   */
  @javax.annotation.Nullable
  public BigDecimal getLongestStreak() {
    return longestStreak;
  }

  public void setLongestStreak(@javax.annotation.Nullable BigDecimal longestStreak) {
    this.longestStreak = longestStreak;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGamificationGlobalStatsGet200ResponseDataGamification apiGamificationGlobalStatsGet200ResponseDataGamification = (ApiGamificationGlobalStatsGet200ResponseDataGamification) o;
    return Objects.equals(this.totalXP, apiGamificationGlobalStatsGet200ResponseDataGamification.totalXP) &&
        Objects.equals(this.totalTasksCompleted, apiGamificationGlobalStatsGet200ResponseDataGamification.totalTasksCompleted) &&
        Objects.equals(this.totalBadgesEarned, apiGamificationGlobalStatsGet200ResponseDataGamification.totalBadgesEarned) &&
        Objects.equals(this.longestStreak, apiGamificationGlobalStatsGet200ResponseDataGamification.longestStreak);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalXP, totalTasksCompleted, totalBadgesEarned, longestStreak);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGamificationGlobalStatsGet200ResponseDataGamification {\n");
    sb.append("    totalXP: ").append(toIndentedString(totalXP)).append("\n");
    sb.append("    totalTasksCompleted: ").append(toIndentedString(totalTasksCompleted)).append("\n");
    sb.append("    totalBadgesEarned: ").append(toIndentedString(totalBadgesEarned)).append("\n");
    sb.append("    longestStreak: ").append(toIndentedString(longestStreak)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("totalXP");
    openapiFields.add("totalTasksCompleted");
    openapiFields.add("totalBadgesEarned");
    openapiFields.add("longestStreak");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiGamificationGlobalStatsGet200ResponseDataGamification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiGamificationGlobalStatsGet200ResponseDataGamification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiGamificationGlobalStatsGet200ResponseDataGamification is not found in the empty JSON string", ApiGamificationGlobalStatsGet200ResponseDataGamification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiGamificationGlobalStatsGet200ResponseDataGamification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiGamificationGlobalStatsGet200ResponseDataGamification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiGamificationGlobalStatsGet200ResponseDataGamification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiGamificationGlobalStatsGet200ResponseDataGamification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiGamificationGlobalStatsGet200ResponseDataGamification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiGamificationGlobalStatsGet200ResponseDataGamification.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiGamificationGlobalStatsGet200ResponseDataGamification>() {
           @Override
           public void write(JsonWriter out, ApiGamificationGlobalStatsGet200ResponseDataGamification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiGamificationGlobalStatsGet200ResponseDataGamification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiGamificationGlobalStatsGet200ResponseDataGamification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiGamificationGlobalStatsGet200ResponseDataGamification
   * @throws IOException if the JSON string is invalid with respect to ApiGamificationGlobalStatsGet200ResponseDataGamification
   */
  public static ApiGamificationGlobalStatsGet200ResponseDataGamification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiGamificationGlobalStatsGet200ResponseDataGamification.class);
  }

  /**
   * Convert an instance of ApiGamificationGlobalStatsGet200ResponseDataGamification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

