/*
 * Gamified Task Management API
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApiGamificationDashboardGet200ResponseDataStats;
import org.openapitools.client.model.ApiGamificationDashboardGet200ResponseDataUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiGamificationDashboardGet200ResponseData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-14T22:25:20.364832200-03:00[America/Sao_Paulo]", comments = "Generator version: 7.13.0")
public class ApiGamificationDashboardGet200ResponseData {
  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  @javax.annotation.Nullable
  private ApiGamificationDashboardGet200ResponseDataUser user;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  @javax.annotation.Nullable
  private ApiGamificationDashboardGet200ResponseDataStats stats;

  public static final String SERIALIZED_NAME_STORIES = "stories";
  @SerializedName(SERIALIZED_NAME_STORIES)
  @javax.annotation.Nullable
  private Object stories;

  public static final String SERIALIZED_NAME_RECENT_ACHIEVEMENTS = "recentAchievements";
  @SerializedName(SERIALIZED_NAME_RECENT_ACHIEVEMENTS)
  @javax.annotation.Nullable
  private List<String> recentAchievements = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACTIVE_STORIES = "activeStories";
  @SerializedName(SERIALIZED_NAME_ACTIVE_STORIES)
  @javax.annotation.Nullable
  private List<String> activeStories = new ArrayList<>();

  public ApiGamificationDashboardGet200ResponseData() {
  }

  public ApiGamificationDashboardGet200ResponseData user(@javax.annotation.Nullable ApiGamificationDashboardGet200ResponseDataUser user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  public ApiGamificationDashboardGet200ResponseDataUser getUser() {
    return user;
  }

  public void setUser(@javax.annotation.Nullable ApiGamificationDashboardGet200ResponseDataUser user) {
    this.user = user;
  }


  public ApiGamificationDashboardGet200ResponseData stats(@javax.annotation.Nullable ApiGamificationDashboardGet200ResponseDataStats stats) {
    this.stats = stats;
    return this;
  }

  /**
   * Get stats
   * @return stats
   */
  @javax.annotation.Nullable
  public ApiGamificationDashboardGet200ResponseDataStats getStats() {
    return stats;
  }

  public void setStats(@javax.annotation.Nullable ApiGamificationDashboardGet200ResponseDataStats stats) {
    this.stats = stats;
  }


  public ApiGamificationDashboardGet200ResponseData stories(@javax.annotation.Nullable Object stories) {
    this.stories = stories;
    return this;
  }

  /**
   * Get stories
   * @return stories
   */
  @javax.annotation.Nullable
  public Object getStories() {
    return stories;
  }

  public void setStories(@javax.annotation.Nullable Object stories) {
    this.stories = stories;
  }


  public ApiGamificationDashboardGet200ResponseData recentAchievements(@javax.annotation.Nullable List<String> recentAchievements) {
    this.recentAchievements = recentAchievements;
    return this;
  }

  public ApiGamificationDashboardGet200ResponseData addRecentAchievementsItem(String recentAchievementsItem) {
    if (this.recentAchievements == null) {
      this.recentAchievements = new ArrayList<>();
    }
    this.recentAchievements.add(recentAchievementsItem);
    return this;
  }

  /**
   * Get recentAchievements
   * @return recentAchievements
   */
  @javax.annotation.Nullable
  public List<String> getRecentAchievements() {
    return recentAchievements;
  }

  public void setRecentAchievements(@javax.annotation.Nullable List<String> recentAchievements) {
    this.recentAchievements = recentAchievements;
  }


  public ApiGamificationDashboardGet200ResponseData activeStories(@javax.annotation.Nullable List<String> activeStories) {
    this.activeStories = activeStories;
    return this;
  }

  public ApiGamificationDashboardGet200ResponseData addActiveStoriesItem(String activeStoriesItem) {
    if (this.activeStories == null) {
      this.activeStories = new ArrayList<>();
    }
    this.activeStories.add(activeStoriesItem);
    return this;
  }

  /**
   * Get activeStories
   * @return activeStories
   */
  @javax.annotation.Nullable
  public List<String> getActiveStories() {
    return activeStories;
  }

  public void setActiveStories(@javax.annotation.Nullable List<String> activeStories) {
    this.activeStories = activeStories;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGamificationDashboardGet200ResponseData apiGamificationDashboardGet200ResponseData = (ApiGamificationDashboardGet200ResponseData) o;
    return Objects.equals(this.user, apiGamificationDashboardGet200ResponseData.user) &&
        Objects.equals(this.stats, apiGamificationDashboardGet200ResponseData.stats) &&
        Objects.equals(this.stories, apiGamificationDashboardGet200ResponseData.stories) &&
        Objects.equals(this.recentAchievements, apiGamificationDashboardGet200ResponseData.recentAchievements) &&
        Objects.equals(this.activeStories, apiGamificationDashboardGet200ResponseData.activeStories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(user, stats, stories, recentAchievements, activeStories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGamificationDashboardGet200ResponseData {\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    stories: ").append(toIndentedString(stories)).append("\n");
    sb.append("    recentAchievements: ").append(toIndentedString(recentAchievements)).append("\n");
    sb.append("    activeStories: ").append(toIndentedString(activeStories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user");
    openapiFields.add("stats");
    openapiFields.add("stories");
    openapiFields.add("recentAchievements");
    openapiFields.add("activeStories");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiGamificationDashboardGet200ResponseData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiGamificationDashboardGet200ResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiGamificationDashboardGet200ResponseData is not found in the empty JSON string", ApiGamificationDashboardGet200ResponseData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiGamificationDashboardGet200ResponseData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiGamificationDashboardGet200ResponseData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `user`
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        ApiGamificationDashboardGet200ResponseDataUser.validateJsonElement(jsonObj.get("user"));
      }
      // validate the optional field `stats`
      if (jsonObj.get("stats") != null && !jsonObj.get("stats").isJsonNull()) {
        ApiGamificationDashboardGet200ResponseDataStats.validateJsonElement(jsonObj.get("stats"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("recentAchievements") != null && !jsonObj.get("recentAchievements").isJsonNull() && !jsonObj.get("recentAchievements").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `recentAchievements` to be an array in the JSON string but got `%s`", jsonObj.get("recentAchievements").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("activeStories") != null && !jsonObj.get("activeStories").isJsonNull() && !jsonObj.get("activeStories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeStories` to be an array in the JSON string but got `%s`", jsonObj.get("activeStories").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiGamificationDashboardGet200ResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiGamificationDashboardGet200ResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiGamificationDashboardGet200ResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiGamificationDashboardGet200ResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiGamificationDashboardGet200ResponseData>() {
           @Override
           public void write(JsonWriter out, ApiGamificationDashboardGet200ResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiGamificationDashboardGet200ResponseData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiGamificationDashboardGet200ResponseData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiGamificationDashboardGet200ResponseData
   * @throws IOException if the JSON string is invalid with respect to ApiGamificationDashboardGet200ResponseData
   */
  public static ApiGamificationDashboardGet200ResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiGamificationDashboardGet200ResponseData.class);
  }

  /**
   * Convert an instance of ApiGamificationDashboardGet200ResponseData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

