/*
 * Gamified Task Management API
 * API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiTasksStoryPost201ResponseDataQuestsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-14T22:25:20.364832200-03:00[America/Sao_Paulo]", comments = "Generator version: 7.13.0")
public class ApiTasksStoryPost201ResponseDataQuestsInner {
  public static final String SERIALIZED_NAME_QUEST_TITLE = "questTitle";
  @SerializedName(SERIALIZED_NAME_QUEST_TITLE)
  @javax.annotation.Nullable
  private String questTitle;

  public static final String SERIALIZED_NAME_QUEST_DESCRIPTION = "questDescription";
  @SerializedName(SERIALIZED_NAME_QUEST_DESCRIPTION)
  @javax.annotation.Nullable
  private String questDescription;

  public static final String SERIALIZED_NAME_DIFFICULTY = "difficulty";
  @SerializedName(SERIALIZED_NAME_DIFFICULTY)
  @javax.annotation.Nullable
  private String difficulty;

  public static final String SERIALIZED_NAME_XP = "xp";
  @SerializedName(SERIALIZED_NAME_XP)
  @javax.annotation.Nullable
  private BigDecimal xp;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  @javax.annotation.Nullable
  private String category;

  public ApiTasksStoryPost201ResponseDataQuestsInner() {
  }

  public ApiTasksStoryPost201ResponseDataQuestsInner questTitle(@javax.annotation.Nullable String questTitle) {
    this.questTitle = questTitle;
    return this;
  }

  /**
   * Get questTitle
   * @return questTitle
   */
  @javax.annotation.Nullable
  public String getQuestTitle() {
    return questTitle;
  }

  public void setQuestTitle(@javax.annotation.Nullable String questTitle) {
    this.questTitle = questTitle;
  }


  public ApiTasksStoryPost201ResponseDataQuestsInner questDescription(@javax.annotation.Nullable String questDescription) {
    this.questDescription = questDescription;
    return this;
  }

  /**
   * Get questDescription
   * @return questDescription
   */
  @javax.annotation.Nullable
  public String getQuestDescription() {
    return questDescription;
  }

  public void setQuestDescription(@javax.annotation.Nullable String questDescription) {
    this.questDescription = questDescription;
  }


  public ApiTasksStoryPost201ResponseDataQuestsInner difficulty(@javax.annotation.Nullable String difficulty) {
    this.difficulty = difficulty;
    return this;
  }

  /**
   * Get difficulty
   * @return difficulty
   */
  @javax.annotation.Nullable
  public String getDifficulty() {
    return difficulty;
  }

  public void setDifficulty(@javax.annotation.Nullable String difficulty) {
    this.difficulty = difficulty;
  }


  public ApiTasksStoryPost201ResponseDataQuestsInner xp(@javax.annotation.Nullable BigDecimal xp) {
    this.xp = xp;
    return this;
  }

  /**
   * Get xp
   * @return xp
   */
  @javax.annotation.Nullable
  public BigDecimal getXp() {
    return xp;
  }

  public void setXp(@javax.annotation.Nullable BigDecimal xp) {
    this.xp = xp;
  }


  public ApiTasksStoryPost201ResponseDataQuestsInner category(@javax.annotation.Nullable String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(@javax.annotation.Nullable String category) {
    this.category = category;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTasksStoryPost201ResponseDataQuestsInner apiTasksStoryPost201ResponseDataQuestsInner = (ApiTasksStoryPost201ResponseDataQuestsInner) o;
    return Objects.equals(this.questTitle, apiTasksStoryPost201ResponseDataQuestsInner.questTitle) &&
        Objects.equals(this.questDescription, apiTasksStoryPost201ResponseDataQuestsInner.questDescription) &&
        Objects.equals(this.difficulty, apiTasksStoryPost201ResponseDataQuestsInner.difficulty) &&
        Objects.equals(this.xp, apiTasksStoryPost201ResponseDataQuestsInner.xp) &&
        Objects.equals(this.category, apiTasksStoryPost201ResponseDataQuestsInner.category);
  }

  @Override
  public int hashCode() {
    return Objects.hash(questTitle, questDescription, difficulty, xp, category);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTasksStoryPost201ResponseDataQuestsInner {\n");
    sb.append("    questTitle: ").append(toIndentedString(questTitle)).append("\n");
    sb.append("    questDescription: ").append(toIndentedString(questDescription)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    xp: ").append(toIndentedString(xp)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("questTitle");
    openapiFields.add("questDescription");
    openapiFields.add("difficulty");
    openapiFields.add("xp");
    openapiFields.add("category");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiTasksStoryPost201ResponseDataQuestsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiTasksStoryPost201ResponseDataQuestsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiTasksStoryPost201ResponseDataQuestsInner is not found in the empty JSON string", ApiTasksStoryPost201ResponseDataQuestsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiTasksStoryPost201ResponseDataQuestsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiTasksStoryPost201ResponseDataQuestsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("questTitle") != null && !jsonObj.get("questTitle").isJsonNull()) && !jsonObj.get("questTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questTitle").toString()));
      }
      if ((jsonObj.get("questDescription") != null && !jsonObj.get("questDescription").isJsonNull()) && !jsonObj.get("questDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `questDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("questDescription").toString()));
      }
      if ((jsonObj.get("difficulty") != null && !jsonObj.get("difficulty").isJsonNull()) && !jsonObj.get("difficulty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `difficulty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("difficulty").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiTasksStoryPost201ResponseDataQuestsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiTasksStoryPost201ResponseDataQuestsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiTasksStoryPost201ResponseDataQuestsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiTasksStoryPost201ResponseDataQuestsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiTasksStoryPost201ResponseDataQuestsInner>() {
           @Override
           public void write(JsonWriter out, ApiTasksStoryPost201ResponseDataQuestsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiTasksStoryPost201ResponseDataQuestsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiTasksStoryPost201ResponseDataQuestsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiTasksStoryPost201ResponseDataQuestsInner
   * @throws IOException if the JSON string is invalid with respect to ApiTasksStoryPost201ResponseDataQuestsInner
   */
  public static ApiTasksStoryPost201ResponseDataQuestsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiTasksStoryPost201ResponseDataQuestsInner.class);
  }

  /**
   * Convert an instance of ApiTasksStoryPost201ResponseDataQuestsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

