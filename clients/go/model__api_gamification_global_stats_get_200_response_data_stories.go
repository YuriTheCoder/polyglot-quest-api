/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiGamificationGlobalStatsGet200ResponseDataStories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGamificationGlobalStatsGet200ResponseDataStories{}

// ApiGamificationGlobalStatsGet200ResponseDataStories struct for ApiGamificationGlobalStatsGet200ResponseDataStories
type ApiGamificationGlobalStatsGet200ResponseDataStories struct {
	TotalStories *float32 `json:"totalStories,omitempty"`
	TotalQuests *float32 `json:"totalQuests,omitempty"`
	CompletedStories *float32 `json:"completedStories,omitempty"`
	CompletionRate *float32 `json:"completionRate,omitempty"`
}

// NewApiGamificationGlobalStatsGet200ResponseDataStories instantiates a new ApiGamificationGlobalStatsGet200ResponseDataStories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGamificationGlobalStatsGet200ResponseDataStories() *ApiGamificationGlobalStatsGet200ResponseDataStories {
	this := ApiGamificationGlobalStatsGet200ResponseDataStories{}
	return &this
}

// NewApiGamificationGlobalStatsGet200ResponseDataStoriesWithDefaults instantiates a new ApiGamificationGlobalStatsGet200ResponseDataStories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGamificationGlobalStatsGet200ResponseDataStoriesWithDefaults() *ApiGamificationGlobalStatsGet200ResponseDataStories {
	this := ApiGamificationGlobalStatsGet200ResponseDataStories{}
	return &this
}

// GetTotalStories returns the TotalStories field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetTotalStories() float32 {
	if o == nil || IsNil(o.TotalStories) {
		var ret float32
		return ret
	}
	return *o.TotalStories
}

// GetTotalStoriesOk returns a tuple with the TotalStories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetTotalStoriesOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalStories) {
		return nil, false
	}
	return o.TotalStories, true
}

// HasTotalStories returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) HasTotalStories() bool {
	if o != nil && !IsNil(o.TotalStories) {
		return true
	}

	return false
}

// SetTotalStories gets a reference to the given float32 and assigns it to the TotalStories field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) SetTotalStories(v float32) {
	o.TotalStories = &v
}

// GetTotalQuests returns the TotalQuests field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetTotalQuests() float32 {
	if o == nil || IsNil(o.TotalQuests) {
		var ret float32
		return ret
	}
	return *o.TotalQuests
}

// GetTotalQuestsOk returns a tuple with the TotalQuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetTotalQuestsOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalQuests) {
		return nil, false
	}
	return o.TotalQuests, true
}

// HasTotalQuests returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) HasTotalQuests() bool {
	if o != nil && !IsNil(o.TotalQuests) {
		return true
	}

	return false
}

// SetTotalQuests gets a reference to the given float32 and assigns it to the TotalQuests field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) SetTotalQuests(v float32) {
	o.TotalQuests = &v
}

// GetCompletedStories returns the CompletedStories field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetCompletedStories() float32 {
	if o == nil || IsNil(o.CompletedStories) {
		var ret float32
		return ret
	}
	return *o.CompletedStories
}

// GetCompletedStoriesOk returns a tuple with the CompletedStories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetCompletedStoriesOk() (*float32, bool) {
	if o == nil || IsNil(o.CompletedStories) {
		return nil, false
	}
	return o.CompletedStories, true
}

// HasCompletedStories returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) HasCompletedStories() bool {
	if o != nil && !IsNil(o.CompletedStories) {
		return true
	}

	return false
}

// SetCompletedStories gets a reference to the given float32 and assigns it to the CompletedStories field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) SetCompletedStories(v float32) {
	o.CompletedStories = &v
}

// GetCompletionRate returns the CompletionRate field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetCompletionRate() float32 {
	if o == nil || IsNil(o.CompletionRate) {
		var ret float32
		return ret
	}
	return *o.CompletionRate
}

// GetCompletionRateOk returns a tuple with the CompletionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) GetCompletionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.CompletionRate) {
		return nil, false
	}
	return o.CompletionRate, true
}

// HasCompletionRate returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) HasCompletionRate() bool {
	if o != nil && !IsNil(o.CompletionRate) {
		return true
	}

	return false
}

// SetCompletionRate gets a reference to the given float32 and assigns it to the CompletionRate field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataStories) SetCompletionRate(v float32) {
	o.CompletionRate = &v
}

func (o ApiGamificationGlobalStatsGet200ResponseDataStories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGamificationGlobalStatsGet200ResponseDataStories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalStories) {
		toSerialize["totalStories"] = o.TotalStories
	}
	if !IsNil(o.TotalQuests) {
		toSerialize["totalQuests"] = o.TotalQuests
	}
	if !IsNil(o.CompletedStories) {
		toSerialize["completedStories"] = o.CompletedStories
	}
	if !IsNil(o.CompletionRate) {
		toSerialize["completionRate"] = o.CompletionRate
	}
	return toSerialize, nil
}

type NullableApiGamificationGlobalStatsGet200ResponseDataStories struct {
	value *ApiGamificationGlobalStatsGet200ResponseDataStories
	isSet bool
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataStories) Get() *ApiGamificationGlobalStatsGet200ResponseDataStories {
	return v.value
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataStories) Set(val *ApiGamificationGlobalStatsGet200ResponseDataStories) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataStories) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataStories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGamificationGlobalStatsGet200ResponseDataStories(val *ApiGamificationGlobalStatsGet200ResponseDataStories) *NullableApiGamificationGlobalStatsGet200ResponseDataStories {
	return &NullableApiGamificationGlobalStatsGet200ResponseDataStories{value: val, isSet: true}
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataStories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataStories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


