/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetGamificationDashboard200ResponseDataUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGamificationDashboard200ResponseDataUser{}

// GetGamificationDashboard200ResponseDataUser struct for GetGamificationDashboard200ResponseDataUser
type GetGamificationDashboard200ResponseDataUser struct {
	Username *string `json:"username,omitempty"`
	Level *float32 `json:"level,omitempty"`
	TotalXP *float32 `json:"totalXP,omitempty"`
	Rank *float32 `json:"rank,omitempty"`
}

// NewGetGamificationDashboard200ResponseDataUser instantiates a new GetGamificationDashboard200ResponseDataUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGamificationDashboard200ResponseDataUser() *GetGamificationDashboard200ResponseDataUser {
	this := GetGamificationDashboard200ResponseDataUser{}
	return &this
}

// NewGetGamificationDashboard200ResponseDataUserWithDefaults instantiates a new GetGamificationDashboard200ResponseDataUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGamificationDashboard200ResponseDataUserWithDefaults() *GetGamificationDashboard200ResponseDataUser {
	this := GetGamificationDashboard200ResponseDataUser{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetGamificationDashboard200ResponseDataUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGamificationDashboard200ResponseDataUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GetGamificationDashboard200ResponseDataUser) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetGamificationDashboard200ResponseDataUser) SetUsername(v string) {
	o.Username = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *GetGamificationDashboard200ResponseDataUser) GetLevel() float32 {
	if o == nil || IsNil(o.Level) {
		var ret float32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGamificationDashboard200ResponseDataUser) GetLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *GetGamificationDashboard200ResponseDataUser) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given float32 and assigns it to the Level field.
func (o *GetGamificationDashboard200ResponseDataUser) SetLevel(v float32) {
	o.Level = &v
}

// GetTotalXP returns the TotalXP field value if set, zero value otherwise.
func (o *GetGamificationDashboard200ResponseDataUser) GetTotalXP() float32 {
	if o == nil || IsNil(o.TotalXP) {
		var ret float32
		return ret
	}
	return *o.TotalXP
}

// GetTotalXPOk returns a tuple with the TotalXP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGamificationDashboard200ResponseDataUser) GetTotalXPOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalXP) {
		return nil, false
	}
	return o.TotalXP, true
}

// HasTotalXP returns a boolean if a field has been set.
func (o *GetGamificationDashboard200ResponseDataUser) HasTotalXP() bool {
	if o != nil && !IsNil(o.TotalXP) {
		return true
	}

	return false
}

// SetTotalXP gets a reference to the given float32 and assigns it to the TotalXP field.
func (o *GetGamificationDashboard200ResponseDataUser) SetTotalXP(v float32) {
	o.TotalXP = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *GetGamificationDashboard200ResponseDataUser) GetRank() float32 {
	if o == nil || IsNil(o.Rank) {
		var ret float32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGamificationDashboard200ResponseDataUser) GetRankOk() (*float32, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *GetGamificationDashboard200ResponseDataUser) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given float32 and assigns it to the Rank field.
func (o *GetGamificationDashboard200ResponseDataUser) SetRank(v float32) {
	o.Rank = &v
}

func (o GetGamificationDashboard200ResponseDataUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGamificationDashboard200ResponseDataUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.TotalXP) {
		toSerialize["totalXP"] = o.TotalXP
	}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	return toSerialize, nil
}

type NullableGetGamificationDashboard200ResponseDataUser struct {
	value *GetGamificationDashboard200ResponseDataUser
	isSet bool
}

func (v NullableGetGamificationDashboard200ResponseDataUser) Get() *GetGamificationDashboard200ResponseDataUser {
	return v.value
}

func (v *NullableGetGamificationDashboard200ResponseDataUser) Set(val *GetGamificationDashboard200ResponseDataUser) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGamificationDashboard200ResponseDataUser) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGamificationDashboard200ResponseDataUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGamificationDashboard200ResponseDataUser(val *GetGamificationDashboard200ResponseDataUser) *NullableGetGamificationDashboard200ResponseDataUser {
	return &NullableGetGamificationDashboard200ResponseDataUser{value: val, isSet: true}
}

func (v NullableGetGamificationDashboard200ResponseDataUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGamificationDashboard200ResponseDataUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


