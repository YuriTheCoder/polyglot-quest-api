/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegisterUser201ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterUser201ResponseData{}

// RegisterUser201ResponseData struct for RegisterUser201ResponseData
type RegisterUser201ResponseData struct {
	User *User `json:"user,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewRegisterUser201ResponseData instantiates a new RegisterUser201ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterUser201ResponseData() *RegisterUser201ResponseData {
	this := RegisterUser201ResponseData{}
	return &this
}

// NewRegisterUser201ResponseDataWithDefaults instantiates a new RegisterUser201ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterUser201ResponseDataWithDefaults() *RegisterUser201ResponseData {
	this := RegisterUser201ResponseData{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RegisterUser201ResponseData) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUser201ResponseData) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RegisterUser201ResponseData) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *RegisterUser201ResponseData) SetUser(v User) {
	o.User = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *RegisterUser201ResponseData) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUser201ResponseData) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *RegisterUser201ResponseData) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *RegisterUser201ResponseData) SetToken(v string) {
	o.Token = &v
}

func (o RegisterUser201ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterUser201ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableRegisterUser201ResponseData struct {
	value *RegisterUser201ResponseData
	isSet bool
}

func (v NullableRegisterUser201ResponseData) Get() *RegisterUser201ResponseData {
	return v.value
}

func (v *NullableRegisterUser201ResponseData) Set(val *RegisterUser201ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterUser201ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterUser201ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterUser201ResponseData(val *RegisterUser201ResponseData) *NullableRegisterUser201ResponseData {
	return &NullableRegisterUser201ResponseData{value: val, isSet: true}
}

func (v NullableRegisterUser201ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterUser201ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


