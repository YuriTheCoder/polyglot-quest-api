/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUserById200ResponseDataTaskStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserById200ResponseDataTaskStats{}

// GetUserById200ResponseDataTaskStats struct for GetUserById200ResponseDataTaskStats
type GetUserById200ResponseDataTaskStats struct {
	Total *int32 `json:"total,omitempty"`
	Pending *int32 `json:"pending,omitempty"`
	InProgress *int32 `json:"in_progress,omitempty"`
	Completed *int32 `json:"completed,omitempty"`
}

// NewGetUserById200ResponseDataTaskStats instantiates a new GetUserById200ResponseDataTaskStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserById200ResponseDataTaskStats() *GetUserById200ResponseDataTaskStats {
	this := GetUserById200ResponseDataTaskStats{}
	return &this
}

// NewGetUserById200ResponseDataTaskStatsWithDefaults instantiates a new GetUserById200ResponseDataTaskStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserById200ResponseDataTaskStatsWithDefaults() *GetUserById200ResponseDataTaskStats {
	this := GetUserById200ResponseDataTaskStats{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetUserById200ResponseDataTaskStats) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserById200ResponseDataTaskStats) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetUserById200ResponseDataTaskStats) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetUserById200ResponseDataTaskStats) SetTotal(v int32) {
	o.Total = &v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *GetUserById200ResponseDataTaskStats) GetPending() int32 {
	if o == nil || IsNil(o.Pending) {
		var ret int32
		return ret
	}
	return *o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserById200ResponseDataTaskStats) GetPendingOk() (*int32, bool) {
	if o == nil || IsNil(o.Pending) {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *GetUserById200ResponseDataTaskStats) HasPending() bool {
	if o != nil && !IsNil(o.Pending) {
		return true
	}

	return false
}

// SetPending gets a reference to the given int32 and assigns it to the Pending field.
func (o *GetUserById200ResponseDataTaskStats) SetPending(v int32) {
	o.Pending = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *GetUserById200ResponseDataTaskStats) GetInProgress() int32 {
	if o == nil || IsNil(o.InProgress) {
		var ret int32
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserById200ResponseDataTaskStats) GetInProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *GetUserById200ResponseDataTaskStats) HasInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given int32 and assigns it to the InProgress field.
func (o *GetUserById200ResponseDataTaskStats) SetInProgress(v int32) {
	o.InProgress = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *GetUserById200ResponseDataTaskStats) GetCompleted() int32 {
	if o == nil || IsNil(o.Completed) {
		var ret int32
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserById200ResponseDataTaskStats) GetCompletedOk() (*int32, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *GetUserById200ResponseDataTaskStats) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given int32 and assigns it to the Completed field.
func (o *GetUserById200ResponseDataTaskStats) SetCompleted(v int32) {
	o.Completed = &v
}

func (o GetUserById200ResponseDataTaskStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserById200ResponseDataTaskStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Pending) {
		toSerialize["pending"] = o.Pending
	}
	if !IsNil(o.InProgress) {
		toSerialize["in_progress"] = o.InProgress
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	return toSerialize, nil
}

type NullableGetUserById200ResponseDataTaskStats struct {
	value *GetUserById200ResponseDataTaskStats
	isSet bool
}

func (v NullableGetUserById200ResponseDataTaskStats) Get() *GetUserById200ResponseDataTaskStats {
	return v.value
}

func (v *NullableGetUserById200ResponseDataTaskStats) Set(val *GetUserById200ResponseDataTaskStats) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserById200ResponseDataTaskStats) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserById200ResponseDataTaskStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserById200ResponseDataTaskStats(val *GetUserById200ResponseDataTaskStats) *NullableGetUserById200ResponseDataTaskStats {
	return &NullableGetUserById200ResponseDataTaskStats{value: val, isSet: true}
}

func (v NullableGetUserById200ResponseDataTaskStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserById200ResponseDataTaskStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


