/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiLeaderboardGet200ResponseDataLeaderboardInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiLeaderboardGet200ResponseDataLeaderboardInner{}

// ApiLeaderboardGet200ResponseDataLeaderboardInner struct for ApiLeaderboardGet200ResponseDataLeaderboardInner
type ApiLeaderboardGet200ResponseDataLeaderboardInner struct {
	Rank *float32 `json:"rank,omitempty"`
	Username *string `json:"username,omitempty"`
	Level *float32 `json:"level,omitempty"`
	TotalXP *float32 `json:"totalXP,omitempty"`
	TasksCompleted *float32 `json:"tasksCompleted,omitempty"`
	CurrentStreak *float32 `json:"currentStreak,omitempty"`
	Badges *float32 `json:"badges,omitempty"`
}

// NewApiLeaderboardGet200ResponseDataLeaderboardInner instantiates a new ApiLeaderboardGet200ResponseDataLeaderboardInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLeaderboardGet200ResponseDataLeaderboardInner() *ApiLeaderboardGet200ResponseDataLeaderboardInner {
	this := ApiLeaderboardGet200ResponseDataLeaderboardInner{}
	return &this
}

// NewApiLeaderboardGet200ResponseDataLeaderboardInnerWithDefaults instantiates a new ApiLeaderboardGet200ResponseDataLeaderboardInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLeaderboardGet200ResponseDataLeaderboardInnerWithDefaults() *ApiLeaderboardGet200ResponseDataLeaderboardInner {
	this := ApiLeaderboardGet200ResponseDataLeaderboardInner{}
	return &this
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetRank() float32 {
	if o == nil || IsNil(o.Rank) {
		var ret float32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetRankOk() (*float32, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given float32 and assigns it to the Rank field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetRank(v float32) {
	o.Rank = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetUsername(v string) {
	o.Username = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetLevel() float32 {
	if o == nil || IsNil(o.Level) {
		var ret float32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given float32 and assigns it to the Level field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetLevel(v float32) {
	o.Level = &v
}

// GetTotalXP returns the TotalXP field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetTotalXP() float32 {
	if o == nil || IsNil(o.TotalXP) {
		var ret float32
		return ret
	}
	return *o.TotalXP
}

// GetTotalXPOk returns a tuple with the TotalXP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetTotalXPOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalXP) {
		return nil, false
	}
	return o.TotalXP, true
}

// HasTotalXP returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasTotalXP() bool {
	if o != nil && !IsNil(o.TotalXP) {
		return true
	}

	return false
}

// SetTotalXP gets a reference to the given float32 and assigns it to the TotalXP field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetTotalXP(v float32) {
	o.TotalXP = &v
}

// GetTasksCompleted returns the TasksCompleted field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetTasksCompleted() float32 {
	if o == nil || IsNil(o.TasksCompleted) {
		var ret float32
		return ret
	}
	return *o.TasksCompleted
}

// GetTasksCompletedOk returns a tuple with the TasksCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetTasksCompletedOk() (*float32, bool) {
	if o == nil || IsNil(o.TasksCompleted) {
		return nil, false
	}
	return o.TasksCompleted, true
}

// HasTasksCompleted returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasTasksCompleted() bool {
	if o != nil && !IsNil(o.TasksCompleted) {
		return true
	}

	return false
}

// SetTasksCompleted gets a reference to the given float32 and assigns it to the TasksCompleted field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetTasksCompleted(v float32) {
	o.TasksCompleted = &v
}

// GetCurrentStreak returns the CurrentStreak field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetCurrentStreak() float32 {
	if o == nil || IsNil(o.CurrentStreak) {
		var ret float32
		return ret
	}
	return *o.CurrentStreak
}

// GetCurrentStreakOk returns a tuple with the CurrentStreak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetCurrentStreakOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentStreak) {
		return nil, false
	}
	return o.CurrentStreak, true
}

// HasCurrentStreak returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasCurrentStreak() bool {
	if o != nil && !IsNil(o.CurrentStreak) {
		return true
	}

	return false
}

// SetCurrentStreak gets a reference to the given float32 and assigns it to the CurrentStreak field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetCurrentStreak(v float32) {
	o.CurrentStreak = &v
}

// GetBadges returns the Badges field value if set, zero value otherwise.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetBadges() float32 {
	if o == nil || IsNil(o.Badges) {
		var ret float32
		return ret
	}
	return *o.Badges
}

// GetBadgesOk returns a tuple with the Badges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) GetBadgesOk() (*float32, bool) {
	if o == nil || IsNil(o.Badges) {
		return nil, false
	}
	return o.Badges, true
}

// HasBadges returns a boolean if a field has been set.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) HasBadges() bool {
	if o != nil && !IsNil(o.Badges) {
		return true
	}

	return false
}

// SetBadges gets a reference to the given float32 and assigns it to the Badges field.
func (o *ApiLeaderboardGet200ResponseDataLeaderboardInner) SetBadges(v float32) {
	o.Badges = &v
}

func (o ApiLeaderboardGet200ResponseDataLeaderboardInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiLeaderboardGet200ResponseDataLeaderboardInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.TotalXP) {
		toSerialize["totalXP"] = o.TotalXP
	}
	if !IsNil(o.TasksCompleted) {
		toSerialize["tasksCompleted"] = o.TasksCompleted
	}
	if !IsNil(o.CurrentStreak) {
		toSerialize["currentStreak"] = o.CurrentStreak
	}
	if !IsNil(o.Badges) {
		toSerialize["badges"] = o.Badges
	}
	return toSerialize, nil
}

type NullableApiLeaderboardGet200ResponseDataLeaderboardInner struct {
	value *ApiLeaderboardGet200ResponseDataLeaderboardInner
	isSet bool
}

func (v NullableApiLeaderboardGet200ResponseDataLeaderboardInner) Get() *ApiLeaderboardGet200ResponseDataLeaderboardInner {
	return v.value
}

func (v *NullableApiLeaderboardGet200ResponseDataLeaderboardInner) Set(val *ApiLeaderboardGet200ResponseDataLeaderboardInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLeaderboardGet200ResponseDataLeaderboardInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLeaderboardGet200ResponseDataLeaderboardInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLeaderboardGet200ResponseDataLeaderboardInner(val *ApiLeaderboardGet200ResponseDataLeaderboardInner) *NullableApiLeaderboardGet200ResponseDataLeaderboardInner {
	return &NullableApiLeaderboardGet200ResponseDataLeaderboardInner{value: val, isSet: true}
}

func (v NullableApiLeaderboardGet200ResponseDataLeaderboardInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLeaderboardGet200ResponseDataLeaderboardInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


