/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateStoryFromTasks201ResponseDataStory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStoryFromTasks201ResponseDataStory{}

// CreateStoryFromTasks201ResponseDataStory struct for CreateStoryFromTasks201ResponseDataStory
type CreateStoryFromTasks201ResponseDataStory struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Story *string `json:"story,omitempty"`
	Theme *string `json:"theme,omitempty"`
	TotalXP *float32 `json:"totalXP,omitempty"`
	EstimatedPlayTime *string `json:"estimatedPlayTime,omitempty"`
}

// NewCreateStoryFromTasks201ResponseDataStory instantiates a new CreateStoryFromTasks201ResponseDataStory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStoryFromTasks201ResponseDataStory() *CreateStoryFromTasks201ResponseDataStory {
	this := CreateStoryFromTasks201ResponseDataStory{}
	return &this
}

// NewCreateStoryFromTasks201ResponseDataStoryWithDefaults instantiates a new CreateStoryFromTasks201ResponseDataStory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStoryFromTasks201ResponseDataStoryWithDefaults() *CreateStoryFromTasks201ResponseDataStory {
	this := CreateStoryFromTasks201ResponseDataStory{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetTitle(v string) {
	o.Title = &v
}

// GetStory returns the Story field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetStory() string {
	if o == nil || IsNil(o.Story) {
		var ret string
		return ret
	}
	return *o.Story
}

// GetStoryOk returns a tuple with the Story field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetStoryOk() (*string, bool) {
	if o == nil || IsNil(o.Story) {
		return nil, false
	}
	return o.Story, true
}

// HasStory returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasStory() bool {
	if o != nil && !IsNil(o.Story) {
		return true
	}

	return false
}

// SetStory gets a reference to the given string and assigns it to the Story field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetStory(v string) {
	o.Story = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetTheme(v string) {
	o.Theme = &v
}

// GetTotalXP returns the TotalXP field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetTotalXP() float32 {
	if o == nil || IsNil(o.TotalXP) {
		var ret float32
		return ret
	}
	return *o.TotalXP
}

// GetTotalXPOk returns a tuple with the TotalXP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetTotalXPOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalXP) {
		return nil, false
	}
	return o.TotalXP, true
}

// HasTotalXP returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasTotalXP() bool {
	if o != nil && !IsNil(o.TotalXP) {
		return true
	}

	return false
}

// SetTotalXP gets a reference to the given float32 and assigns it to the TotalXP field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetTotalXP(v float32) {
	o.TotalXP = &v
}

// GetEstimatedPlayTime returns the EstimatedPlayTime field value if set, zero value otherwise.
func (o *CreateStoryFromTasks201ResponseDataStory) GetEstimatedPlayTime() string {
	if o == nil || IsNil(o.EstimatedPlayTime) {
		var ret string
		return ret
	}
	return *o.EstimatedPlayTime
}

// GetEstimatedPlayTimeOk returns a tuple with the EstimatedPlayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) GetEstimatedPlayTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EstimatedPlayTime) {
		return nil, false
	}
	return o.EstimatedPlayTime, true
}

// HasEstimatedPlayTime returns a boolean if a field has been set.
func (o *CreateStoryFromTasks201ResponseDataStory) HasEstimatedPlayTime() bool {
	if o != nil && !IsNil(o.EstimatedPlayTime) {
		return true
	}

	return false
}

// SetEstimatedPlayTime gets a reference to the given string and assigns it to the EstimatedPlayTime field.
func (o *CreateStoryFromTasks201ResponseDataStory) SetEstimatedPlayTime(v string) {
	o.EstimatedPlayTime = &v
}

func (o CreateStoryFromTasks201ResponseDataStory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStoryFromTasks201ResponseDataStory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Story) {
		toSerialize["story"] = o.Story
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !IsNil(o.TotalXP) {
		toSerialize["totalXP"] = o.TotalXP
	}
	if !IsNil(o.EstimatedPlayTime) {
		toSerialize["estimatedPlayTime"] = o.EstimatedPlayTime
	}
	return toSerialize, nil
}

type NullableCreateStoryFromTasks201ResponseDataStory struct {
	value *CreateStoryFromTasks201ResponseDataStory
	isSet bool
}

func (v NullableCreateStoryFromTasks201ResponseDataStory) Get() *CreateStoryFromTasks201ResponseDataStory {
	return v.value
}

func (v *NullableCreateStoryFromTasks201ResponseDataStory) Set(val *CreateStoryFromTasks201ResponseDataStory) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStoryFromTasks201ResponseDataStory) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStoryFromTasks201ResponseDataStory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStoryFromTasks201ResponseDataStory(val *CreateStoryFromTasks201ResponseDataStory) *NullableCreateStoryFromTasks201ResponseDataStory {
	return &NullableCreateStoryFromTasks201ResponseDataStory{value: val, isSet: true}
}

func (v NullableCreateStoryFromTasks201ResponseDataStory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStoryFromTasks201ResponseDataStory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


