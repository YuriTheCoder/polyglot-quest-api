/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiGamificationGlobalStatsGet200ResponseDataUsers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGamificationGlobalStatsGet200ResponseDataUsers{}

// ApiGamificationGlobalStatsGet200ResponseDataUsers struct for ApiGamificationGlobalStatsGet200ResponseDataUsers
type ApiGamificationGlobalStatsGet200ResponseDataUsers struct {
	Total *float32 `json:"total,omitempty"`
	AverageLevel *float32 `json:"averageLevel,omitempty"`
}

// NewApiGamificationGlobalStatsGet200ResponseDataUsers instantiates a new ApiGamificationGlobalStatsGet200ResponseDataUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGamificationGlobalStatsGet200ResponseDataUsers() *ApiGamificationGlobalStatsGet200ResponseDataUsers {
	this := ApiGamificationGlobalStatsGet200ResponseDataUsers{}
	return &this
}

// NewApiGamificationGlobalStatsGet200ResponseDataUsersWithDefaults instantiates a new ApiGamificationGlobalStatsGet200ResponseDataUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGamificationGlobalStatsGet200ResponseDataUsersWithDefaults() *ApiGamificationGlobalStatsGet200ResponseDataUsers {
	this := ApiGamificationGlobalStatsGet200ResponseDataUsers{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) SetTotal(v float32) {
	o.Total = &v
}

// GetAverageLevel returns the AverageLevel field value if set, zero value otherwise.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) GetAverageLevel() float32 {
	if o == nil || IsNil(o.AverageLevel) {
		var ret float32
		return ret
	}
	return *o.AverageLevel
}

// GetAverageLevelOk returns a tuple with the AverageLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) GetAverageLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLevel) {
		return nil, false
	}
	return o.AverageLevel, true
}

// HasAverageLevel returns a boolean if a field has been set.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) HasAverageLevel() bool {
	if o != nil && !IsNil(o.AverageLevel) {
		return true
	}

	return false
}

// SetAverageLevel gets a reference to the given float32 and assigns it to the AverageLevel field.
func (o *ApiGamificationGlobalStatsGet200ResponseDataUsers) SetAverageLevel(v float32) {
	o.AverageLevel = &v
}

func (o ApiGamificationGlobalStatsGet200ResponseDataUsers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGamificationGlobalStatsGet200ResponseDataUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.AverageLevel) {
		toSerialize["averageLevel"] = o.AverageLevel
	}
	return toSerialize, nil
}

type NullableApiGamificationGlobalStatsGet200ResponseDataUsers struct {
	value *ApiGamificationGlobalStatsGet200ResponseDataUsers
	isSet bool
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataUsers) Get() *ApiGamificationGlobalStatsGet200ResponseDataUsers {
	return v.value
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataUsers) Set(val *ApiGamificationGlobalStatsGet200ResponseDataUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGamificationGlobalStatsGet200ResponseDataUsers(val *ApiGamificationGlobalStatsGet200ResponseDataUsers) *NullableApiGamificationGlobalStatsGet200ResponseDataUsers {
	return &NullableApiGamificationGlobalStatsGet200ResponseDataUsers{value: val, isSet: true}
}

func (v NullableApiGamificationGlobalStatsGet200ResponseDataUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGamificationGlobalStatsGet200ResponseDataUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


