/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ApiTasksPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTasksPostRequest{}

// ApiTasksPostRequest struct for ApiTasksPostRequest
type ApiTasksPostRequest struct {
	Title string `json:"title"`
	Description string `json:"description"`
	Status *string `json:"status,omitempty"`
	Priority *string `json:"priority,omitempty"`
	DueDate *time.Time `json:"dueDate,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

type _ApiTasksPostRequest ApiTasksPostRequest

// NewApiTasksPostRequest instantiates a new ApiTasksPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTasksPostRequest(title string, description string) *ApiTasksPostRequest {
	this := ApiTasksPostRequest{}
	this.Title = title
	this.Description = description
	var status string = "pending"
	this.Status = &status
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// NewApiTasksPostRequestWithDefaults instantiates a new ApiTasksPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTasksPostRequestWithDefaults() *ApiTasksPostRequest {
	this := ApiTasksPostRequest{}
	var status string = "pending"
	this.Status = &status
	var priority string = "medium"
	this.Priority = &priority
	return &this
}

// GetTitle returns the Title field value
func (o *ApiTasksPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ApiTasksPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *ApiTasksPostRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ApiTasksPostRequest) SetDescription(v string) {
	o.Description = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiTasksPostRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiTasksPostRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiTasksPostRequest) SetStatus(v string) {
	o.Status = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ApiTasksPostRequest) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ApiTasksPostRequest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *ApiTasksPostRequest) SetPriority(v string) {
	o.Priority = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *ApiTasksPostRequest) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *ApiTasksPostRequest) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *ApiTasksPostRequest) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ApiTasksPostRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksPostRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ApiTasksPostRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ApiTasksPostRequest) SetTags(v []string) {
	o.Tags = v
}

func (o ApiTasksPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTasksPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *ApiTasksPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTasksPostRequest := _ApiTasksPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTasksPostRequest)

	if err != nil {
		return err
	}

	*o = ApiTasksPostRequest(varApiTasksPostRequest)

	return err
}

type NullableApiTasksPostRequest struct {
	value *ApiTasksPostRequest
	isSet bool
}

func (v NullableApiTasksPostRequest) Get() *ApiTasksPostRequest {
	return v.value
}

func (v *NullableApiTasksPostRequest) Set(val *ApiTasksPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTasksPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTasksPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTasksPostRequest(val *ApiTasksPostRequest) *NullableApiTasksPostRequest {
	return &NullableApiTasksPostRequest{value: val, isSet: true}
}

func (v NullableApiTasksPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTasksPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


