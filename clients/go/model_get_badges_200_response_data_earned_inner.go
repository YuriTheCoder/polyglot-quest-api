/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBadges200ResponseDataEarnedInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBadges200ResponseDataEarnedInner{}

// GetBadges200ResponseDataEarnedInner struct for GetBadges200ResponseDataEarnedInner
type GetBadges200ResponseDataEarnedInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Earned *bool `json:"earned,omitempty"`
}

// NewGetBadges200ResponseDataEarnedInner instantiates a new GetBadges200ResponseDataEarnedInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBadges200ResponseDataEarnedInner() *GetBadges200ResponseDataEarnedInner {
	this := GetBadges200ResponseDataEarnedInner{}
	return &this
}

// NewGetBadges200ResponseDataEarnedInnerWithDefaults instantiates a new GetBadges200ResponseDataEarnedInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBadges200ResponseDataEarnedInnerWithDefaults() *GetBadges200ResponseDataEarnedInner {
	this := GetBadges200ResponseDataEarnedInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetBadges200ResponseDataEarnedInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBadges200ResponseDataEarnedInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetBadges200ResponseDataEarnedInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetBadges200ResponseDataEarnedInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetBadges200ResponseDataEarnedInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBadges200ResponseDataEarnedInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetBadges200ResponseDataEarnedInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetBadges200ResponseDataEarnedInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetBadges200ResponseDataEarnedInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBadges200ResponseDataEarnedInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetBadges200ResponseDataEarnedInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetBadges200ResponseDataEarnedInner) SetDescription(v string) {
	o.Description = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *GetBadges200ResponseDataEarnedInner) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBadges200ResponseDataEarnedInner) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *GetBadges200ResponseDataEarnedInner) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *GetBadges200ResponseDataEarnedInner) SetIcon(v string) {
	o.Icon = &v
}

// GetEarned returns the Earned field value if set, zero value otherwise.
func (o *GetBadges200ResponseDataEarnedInner) GetEarned() bool {
	if o == nil || IsNil(o.Earned) {
		var ret bool
		return ret
	}
	return *o.Earned
}

// GetEarnedOk returns a tuple with the Earned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBadges200ResponseDataEarnedInner) GetEarnedOk() (*bool, bool) {
	if o == nil || IsNil(o.Earned) {
		return nil, false
	}
	return o.Earned, true
}

// HasEarned returns a boolean if a field has been set.
func (o *GetBadges200ResponseDataEarnedInner) HasEarned() bool {
	if o != nil && !IsNil(o.Earned) {
		return true
	}

	return false
}

// SetEarned gets a reference to the given bool and assigns it to the Earned field.
func (o *GetBadges200ResponseDataEarnedInner) SetEarned(v bool) {
	o.Earned = &v
}

func (o GetBadges200ResponseDataEarnedInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBadges200ResponseDataEarnedInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Earned) {
		toSerialize["earned"] = o.Earned
	}
	return toSerialize, nil
}

type NullableGetBadges200ResponseDataEarnedInner struct {
	value *GetBadges200ResponseDataEarnedInner
	isSet bool
}

func (v NullableGetBadges200ResponseDataEarnedInner) Get() *GetBadges200ResponseDataEarnedInner {
	return v.value
}

func (v *NullableGetBadges200ResponseDataEarnedInner) Set(val *GetBadges200ResponseDataEarnedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBadges200ResponseDataEarnedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBadges200ResponseDataEarnedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBadges200ResponseDataEarnedInner(val *GetBadges200ResponseDataEarnedInner) *NullableGetBadges200ResponseDataEarnedInner {
	return &NullableGetBadges200ResponseDataEarnedInner{value: val, isSet: true}
}

func (v NullableGetBadges200ResponseDataEarnedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBadges200ResponseDataEarnedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


