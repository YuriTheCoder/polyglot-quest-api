/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiGamificationDashboardGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGamificationDashboardGet200ResponseData{}

// ApiGamificationDashboardGet200ResponseData struct for ApiGamificationDashboardGet200ResponseData
type ApiGamificationDashboardGet200ResponseData struct {
	User *ApiGamificationDashboardGet200ResponseDataUser `json:"user,omitempty"`
	Stats *ApiGamificationDashboardGet200ResponseDataStats `json:"stats,omitempty"`
	Stories map[string]interface{} `json:"stories,omitempty"`
	RecentAchievements []string `json:"recentAchievements,omitempty"`
	ActiveStories []string `json:"activeStories,omitempty"`
}

// NewApiGamificationDashboardGet200ResponseData instantiates a new ApiGamificationDashboardGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGamificationDashboardGet200ResponseData() *ApiGamificationDashboardGet200ResponseData {
	this := ApiGamificationDashboardGet200ResponseData{}
	return &this
}

// NewApiGamificationDashboardGet200ResponseDataWithDefaults instantiates a new ApiGamificationDashboardGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGamificationDashboardGet200ResponseDataWithDefaults() *ApiGamificationDashboardGet200ResponseData {
	this := ApiGamificationDashboardGet200ResponseData{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ApiGamificationDashboardGet200ResponseData) GetUser() ApiGamificationDashboardGet200ResponseDataUser {
	if o == nil || IsNil(o.User) {
		var ret ApiGamificationDashboardGet200ResponseDataUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationDashboardGet200ResponseData) GetUserOk() (*ApiGamificationDashboardGet200ResponseDataUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ApiGamificationDashboardGet200ResponseData) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given ApiGamificationDashboardGet200ResponseDataUser and assigns it to the User field.
func (o *ApiGamificationDashboardGet200ResponseData) SetUser(v ApiGamificationDashboardGet200ResponseDataUser) {
	o.User = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ApiGamificationDashboardGet200ResponseData) GetStats() ApiGamificationDashboardGet200ResponseDataStats {
	if o == nil || IsNil(o.Stats) {
		var ret ApiGamificationDashboardGet200ResponseDataStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationDashboardGet200ResponseData) GetStatsOk() (*ApiGamificationDashboardGet200ResponseDataStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *ApiGamificationDashboardGet200ResponseData) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given ApiGamificationDashboardGet200ResponseDataStats and assigns it to the Stats field.
func (o *ApiGamificationDashboardGet200ResponseData) SetStats(v ApiGamificationDashboardGet200ResponseDataStats) {
	o.Stats = &v
}

// GetStories returns the Stories field value if set, zero value otherwise.
func (o *ApiGamificationDashboardGet200ResponseData) GetStories() map[string]interface{} {
	if o == nil || IsNil(o.Stories) {
		var ret map[string]interface{}
		return ret
	}
	return o.Stories
}

// GetStoriesOk returns a tuple with the Stories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationDashboardGet200ResponseData) GetStoriesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Stories) {
		return map[string]interface{}{}, false
	}
	return o.Stories, true
}

// HasStories returns a boolean if a field has been set.
func (o *ApiGamificationDashboardGet200ResponseData) HasStories() bool {
	if o != nil && !IsNil(o.Stories) {
		return true
	}

	return false
}

// SetStories gets a reference to the given map[string]interface{} and assigns it to the Stories field.
func (o *ApiGamificationDashboardGet200ResponseData) SetStories(v map[string]interface{}) {
	o.Stories = v
}

// GetRecentAchievements returns the RecentAchievements field value if set, zero value otherwise.
func (o *ApiGamificationDashboardGet200ResponseData) GetRecentAchievements() []string {
	if o == nil || IsNil(o.RecentAchievements) {
		var ret []string
		return ret
	}
	return o.RecentAchievements
}

// GetRecentAchievementsOk returns a tuple with the RecentAchievements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationDashboardGet200ResponseData) GetRecentAchievementsOk() ([]string, bool) {
	if o == nil || IsNil(o.RecentAchievements) {
		return nil, false
	}
	return o.RecentAchievements, true
}

// HasRecentAchievements returns a boolean if a field has been set.
func (o *ApiGamificationDashboardGet200ResponseData) HasRecentAchievements() bool {
	if o != nil && !IsNil(o.RecentAchievements) {
		return true
	}

	return false
}

// SetRecentAchievements gets a reference to the given []string and assigns it to the RecentAchievements field.
func (o *ApiGamificationDashboardGet200ResponseData) SetRecentAchievements(v []string) {
	o.RecentAchievements = v
}

// GetActiveStories returns the ActiveStories field value if set, zero value otherwise.
func (o *ApiGamificationDashboardGet200ResponseData) GetActiveStories() []string {
	if o == nil || IsNil(o.ActiveStories) {
		var ret []string
		return ret
	}
	return o.ActiveStories
}

// GetActiveStoriesOk returns a tuple with the ActiveStories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationDashboardGet200ResponseData) GetActiveStoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.ActiveStories) {
		return nil, false
	}
	return o.ActiveStories, true
}

// HasActiveStories returns a boolean if a field has been set.
func (o *ApiGamificationDashboardGet200ResponseData) HasActiveStories() bool {
	if o != nil && !IsNil(o.ActiveStories) {
		return true
	}

	return false
}

// SetActiveStories gets a reference to the given []string and assigns it to the ActiveStories field.
func (o *ApiGamificationDashboardGet200ResponseData) SetActiveStories(v []string) {
	o.ActiveStories = v
}

func (o ApiGamificationDashboardGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGamificationDashboardGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Stories) {
		toSerialize["stories"] = o.Stories
	}
	if !IsNil(o.RecentAchievements) {
		toSerialize["recentAchievements"] = o.RecentAchievements
	}
	if !IsNil(o.ActiveStories) {
		toSerialize["activeStories"] = o.ActiveStories
	}
	return toSerialize, nil
}

type NullableApiGamificationDashboardGet200ResponseData struct {
	value *ApiGamificationDashboardGet200ResponseData
	isSet bool
}

func (v NullableApiGamificationDashboardGet200ResponseData) Get() *ApiGamificationDashboardGet200ResponseData {
	return v.value
}

func (v *NullableApiGamificationDashboardGet200ResponseData) Set(val *ApiGamificationDashboardGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGamificationDashboardGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGamificationDashboardGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGamificationDashboardGet200ResponseData(val *ApiGamificationDashboardGet200ResponseData) *NullableApiGamificationDashboardGet200ResponseData {
	return &NullableApiGamificationDashboardGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiGamificationDashboardGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGamificationDashboardGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


