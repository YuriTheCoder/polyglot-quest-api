/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiTasksGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTasksGet200ResponseData{}

// ApiTasksGet200ResponseData struct for ApiTasksGet200ResponseData
type ApiTasksGet200ResponseData struct {
	Tasks []Task `json:"tasks,omitempty"`
	Pagination *ApiTasksGet200ResponseDataPagination `json:"pagination,omitempty"`
}

// NewApiTasksGet200ResponseData instantiates a new ApiTasksGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTasksGet200ResponseData() *ApiTasksGet200ResponseData {
	this := ApiTasksGet200ResponseData{}
	return &this
}

// NewApiTasksGet200ResponseDataWithDefaults instantiates a new ApiTasksGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTasksGet200ResponseDataWithDefaults() *ApiTasksGet200ResponseData {
	this := ApiTasksGet200ResponseData{}
	return &this
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ApiTasksGet200ResponseData) GetTasks() []Task {
	if o == nil || IsNil(o.Tasks) {
		var ret []Task
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksGet200ResponseData) GetTasksOk() ([]Task, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ApiTasksGet200ResponseData) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []Task and assigns it to the Tasks field.
func (o *ApiTasksGet200ResponseData) SetTasks(v []Task) {
	o.Tasks = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ApiTasksGet200ResponseData) GetPagination() ApiTasksGet200ResponseDataPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ApiTasksGet200ResponseDataPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksGet200ResponseData) GetPaginationOk() (*ApiTasksGet200ResponseDataPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ApiTasksGet200ResponseData) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ApiTasksGet200ResponseDataPagination and assigns it to the Pagination field.
func (o *ApiTasksGet200ResponseData) SetPagination(v ApiTasksGet200ResponseDataPagination) {
	o.Pagination = &v
}

func (o ApiTasksGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTasksGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableApiTasksGet200ResponseData struct {
	value *ApiTasksGet200ResponseData
	isSet bool
}

func (v NullableApiTasksGet200ResponseData) Get() *ApiTasksGet200ResponseData {
	return v.value
}

func (v *NullableApiTasksGet200ResponseData) Set(val *ApiTasksGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTasksGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTasksGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTasksGet200ResponseData(val *ApiTasksGet200ResponseData) *NullableApiTasksGet200ResponseData {
	return &NullableApiTasksGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiTasksGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTasksGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


