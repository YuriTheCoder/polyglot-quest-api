/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetGlobalStats200ResponseDataGamification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGlobalStats200ResponseDataGamification{}

// GetGlobalStats200ResponseDataGamification struct for GetGlobalStats200ResponseDataGamification
type GetGlobalStats200ResponseDataGamification struct {
	TotalXP *float32 `json:"totalXP,omitempty"`
	TotalTasksCompleted *float32 `json:"totalTasksCompleted,omitempty"`
	TotalBadgesEarned *float32 `json:"totalBadgesEarned,omitempty"`
	LongestStreak *float32 `json:"longestStreak,omitempty"`
}

// NewGetGlobalStats200ResponseDataGamification instantiates a new GetGlobalStats200ResponseDataGamification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGlobalStats200ResponseDataGamification() *GetGlobalStats200ResponseDataGamification {
	this := GetGlobalStats200ResponseDataGamification{}
	return &this
}

// NewGetGlobalStats200ResponseDataGamificationWithDefaults instantiates a new GetGlobalStats200ResponseDataGamification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGlobalStats200ResponseDataGamificationWithDefaults() *GetGlobalStats200ResponseDataGamification {
	this := GetGlobalStats200ResponseDataGamification{}
	return &this
}

// GetTotalXP returns the TotalXP field value if set, zero value otherwise.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalXP() float32 {
	if o == nil || IsNil(o.TotalXP) {
		var ret float32
		return ret
	}
	return *o.TotalXP
}

// GetTotalXPOk returns a tuple with the TotalXP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalXPOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalXP) {
		return nil, false
	}
	return o.TotalXP, true
}

// HasTotalXP returns a boolean if a field has been set.
func (o *GetGlobalStats200ResponseDataGamification) HasTotalXP() bool {
	if o != nil && !IsNil(o.TotalXP) {
		return true
	}

	return false
}

// SetTotalXP gets a reference to the given float32 and assigns it to the TotalXP field.
func (o *GetGlobalStats200ResponseDataGamification) SetTotalXP(v float32) {
	o.TotalXP = &v
}

// GetTotalTasksCompleted returns the TotalTasksCompleted field value if set, zero value otherwise.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalTasksCompleted() float32 {
	if o == nil || IsNil(o.TotalTasksCompleted) {
		var ret float32
		return ret
	}
	return *o.TotalTasksCompleted
}

// GetTotalTasksCompletedOk returns a tuple with the TotalTasksCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalTasksCompletedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalTasksCompleted) {
		return nil, false
	}
	return o.TotalTasksCompleted, true
}

// HasTotalTasksCompleted returns a boolean if a field has been set.
func (o *GetGlobalStats200ResponseDataGamification) HasTotalTasksCompleted() bool {
	if o != nil && !IsNil(o.TotalTasksCompleted) {
		return true
	}

	return false
}

// SetTotalTasksCompleted gets a reference to the given float32 and assigns it to the TotalTasksCompleted field.
func (o *GetGlobalStats200ResponseDataGamification) SetTotalTasksCompleted(v float32) {
	o.TotalTasksCompleted = &v
}

// GetTotalBadgesEarned returns the TotalBadgesEarned field value if set, zero value otherwise.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalBadgesEarned() float32 {
	if o == nil || IsNil(o.TotalBadgesEarned) {
		var ret float32
		return ret
	}
	return *o.TotalBadgesEarned
}

// GetTotalBadgesEarnedOk returns a tuple with the TotalBadgesEarned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGlobalStats200ResponseDataGamification) GetTotalBadgesEarnedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalBadgesEarned) {
		return nil, false
	}
	return o.TotalBadgesEarned, true
}

// HasTotalBadgesEarned returns a boolean if a field has been set.
func (o *GetGlobalStats200ResponseDataGamification) HasTotalBadgesEarned() bool {
	if o != nil && !IsNil(o.TotalBadgesEarned) {
		return true
	}

	return false
}

// SetTotalBadgesEarned gets a reference to the given float32 and assigns it to the TotalBadgesEarned field.
func (o *GetGlobalStats200ResponseDataGamification) SetTotalBadgesEarned(v float32) {
	o.TotalBadgesEarned = &v
}

// GetLongestStreak returns the LongestStreak field value if set, zero value otherwise.
func (o *GetGlobalStats200ResponseDataGamification) GetLongestStreak() float32 {
	if o == nil || IsNil(o.LongestStreak) {
		var ret float32
		return ret
	}
	return *o.LongestStreak
}

// GetLongestStreakOk returns a tuple with the LongestStreak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGlobalStats200ResponseDataGamification) GetLongestStreakOk() (*float32, bool) {
	if o == nil || IsNil(o.LongestStreak) {
		return nil, false
	}
	return o.LongestStreak, true
}

// HasLongestStreak returns a boolean if a field has been set.
func (o *GetGlobalStats200ResponseDataGamification) HasLongestStreak() bool {
	if o != nil && !IsNil(o.LongestStreak) {
		return true
	}

	return false
}

// SetLongestStreak gets a reference to the given float32 and assigns it to the LongestStreak field.
func (o *GetGlobalStats200ResponseDataGamification) SetLongestStreak(v float32) {
	o.LongestStreak = &v
}

func (o GetGlobalStats200ResponseDataGamification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGlobalStats200ResponseDataGamification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalXP) {
		toSerialize["totalXP"] = o.TotalXP
	}
	if !IsNil(o.TotalTasksCompleted) {
		toSerialize["totalTasksCompleted"] = o.TotalTasksCompleted
	}
	if !IsNil(o.TotalBadgesEarned) {
		toSerialize["totalBadgesEarned"] = o.TotalBadgesEarned
	}
	if !IsNil(o.LongestStreak) {
		toSerialize["longestStreak"] = o.LongestStreak
	}
	return toSerialize, nil
}

type NullableGetGlobalStats200ResponseDataGamification struct {
	value *GetGlobalStats200ResponseDataGamification
	isSet bool
}

func (v NullableGetGlobalStats200ResponseDataGamification) Get() *GetGlobalStats200ResponseDataGamification {
	return v.value
}

func (v *NullableGetGlobalStats200ResponseDataGamification) Set(val *GetGlobalStats200ResponseDataGamification) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGlobalStats200ResponseDataGamification) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGlobalStats200ResponseDataGamification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGlobalStats200ResponseDataGamification(val *GetGlobalStats200ResponseDataGamification) *NullableGetGlobalStats200ResponseDataGamification {
	return &NullableGetGlobalStats200ResponseDataGamification{value: val, isSet: true}
}

func (v NullableGetGlobalStats200ResponseDataGamification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGlobalStats200ResponseDataGamification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


