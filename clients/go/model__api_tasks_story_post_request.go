/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTasksStoryPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTasksStoryPostRequest{}

// ApiTasksStoryPostRequest struct for ApiTasksStoryPostRequest
type ApiTasksStoryPostRequest struct {
	TaskIds []string `json:"taskIds"`
	UserPreferences *ApiTasksStoryPostRequestUserPreferences `json:"userPreferences,omitempty"`
}

type _ApiTasksStoryPostRequest ApiTasksStoryPostRequest

// NewApiTasksStoryPostRequest instantiates a new ApiTasksStoryPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTasksStoryPostRequest(taskIds []string) *ApiTasksStoryPostRequest {
	this := ApiTasksStoryPostRequest{}
	this.TaskIds = taskIds
	return &this
}

// NewApiTasksStoryPostRequestWithDefaults instantiates a new ApiTasksStoryPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTasksStoryPostRequestWithDefaults() *ApiTasksStoryPostRequest {
	this := ApiTasksStoryPostRequest{}
	return &this
}

// GetTaskIds returns the TaskIds field value
func (o *ApiTasksStoryPostRequest) GetTaskIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TaskIds
}

// GetTaskIdsOk returns a tuple with the TaskIds field value
// and a boolean to check if the value has been set.
func (o *ApiTasksStoryPostRequest) GetTaskIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskIds, true
}

// SetTaskIds sets field value
func (o *ApiTasksStoryPostRequest) SetTaskIds(v []string) {
	o.TaskIds = v
}

// GetUserPreferences returns the UserPreferences field value if set, zero value otherwise.
func (o *ApiTasksStoryPostRequest) GetUserPreferences() ApiTasksStoryPostRequestUserPreferences {
	if o == nil || IsNil(o.UserPreferences) {
		var ret ApiTasksStoryPostRequestUserPreferences
		return ret
	}
	return *o.UserPreferences
}

// GetUserPreferencesOk returns a tuple with the UserPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksStoryPostRequest) GetUserPreferencesOk() (*ApiTasksStoryPostRequestUserPreferences, bool) {
	if o == nil || IsNil(o.UserPreferences) {
		return nil, false
	}
	return o.UserPreferences, true
}

// HasUserPreferences returns a boolean if a field has been set.
func (o *ApiTasksStoryPostRequest) HasUserPreferences() bool {
	if o != nil && !IsNil(o.UserPreferences) {
		return true
	}

	return false
}

// SetUserPreferences gets a reference to the given ApiTasksStoryPostRequestUserPreferences and assigns it to the UserPreferences field.
func (o *ApiTasksStoryPostRequest) SetUserPreferences(v ApiTasksStoryPostRequestUserPreferences) {
	o.UserPreferences = &v
}

func (o ApiTasksStoryPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTasksStoryPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["taskIds"] = o.TaskIds
	if !IsNil(o.UserPreferences) {
		toSerialize["userPreferences"] = o.UserPreferences
	}
	return toSerialize, nil
}

func (o *ApiTasksStoryPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"taskIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTasksStoryPostRequest := _ApiTasksStoryPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTasksStoryPostRequest)

	if err != nil {
		return err
	}

	*o = ApiTasksStoryPostRequest(varApiTasksStoryPostRequest)

	return err
}

type NullableApiTasksStoryPostRequest struct {
	value *ApiTasksStoryPostRequest
	isSet bool
}

func (v NullableApiTasksStoryPostRequest) Get() *ApiTasksStoryPostRequest {
	return v.value
}

func (v *NullableApiTasksStoryPostRequest) Set(val *ApiTasksStoryPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTasksStoryPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTasksStoryPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTasksStoryPostRequest(val *ApiTasksStoryPostRequest) *NullableApiTasksStoryPostRequest {
	return &NullableApiTasksStoryPostRequest{value: val, isSet: true}
}

func (v NullableApiTasksStoryPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTasksStoryPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


