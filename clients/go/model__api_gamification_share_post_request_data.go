/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiGamificationSharePostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGamificationSharePostRequestData{}

// ApiGamificationSharePostRequestData struct for ApiGamificationSharePostRequestData
type ApiGamificationSharePostRequestData struct {
	Level *float32 `json:"level,omitempty"`
	Badge map[string]interface{} `json:"badge,omitempty"`
	Streak *float32 `json:"streak,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewApiGamificationSharePostRequestData instantiates a new ApiGamificationSharePostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGamificationSharePostRequestData() *ApiGamificationSharePostRequestData {
	this := ApiGamificationSharePostRequestData{}
	return &this
}

// NewApiGamificationSharePostRequestDataWithDefaults instantiates a new ApiGamificationSharePostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGamificationSharePostRequestDataWithDefaults() *ApiGamificationSharePostRequestData {
	this := ApiGamificationSharePostRequestData{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ApiGamificationSharePostRequestData) GetLevel() float32 {
	if o == nil || IsNil(o.Level) {
		var ret float32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationSharePostRequestData) GetLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ApiGamificationSharePostRequestData) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given float32 and assigns it to the Level field.
func (o *ApiGamificationSharePostRequestData) SetLevel(v float32) {
	o.Level = &v
}

// GetBadge returns the Badge field value if set, zero value otherwise.
func (o *ApiGamificationSharePostRequestData) GetBadge() map[string]interface{} {
	if o == nil || IsNil(o.Badge) {
		var ret map[string]interface{}
		return ret
	}
	return o.Badge
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationSharePostRequestData) GetBadgeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Badge) {
		return map[string]interface{}{}, false
	}
	return o.Badge, true
}

// HasBadge returns a boolean if a field has been set.
func (o *ApiGamificationSharePostRequestData) HasBadge() bool {
	if o != nil && !IsNil(o.Badge) {
		return true
	}

	return false
}

// SetBadge gets a reference to the given map[string]interface{} and assigns it to the Badge field.
func (o *ApiGamificationSharePostRequestData) SetBadge(v map[string]interface{}) {
	o.Badge = v
}

// GetStreak returns the Streak field value if set, zero value otherwise.
func (o *ApiGamificationSharePostRequestData) GetStreak() float32 {
	if o == nil || IsNil(o.Streak) {
		var ret float32
		return ret
	}
	return *o.Streak
}

// GetStreakOk returns a tuple with the Streak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationSharePostRequestData) GetStreakOk() (*float32, bool) {
	if o == nil || IsNil(o.Streak) {
		return nil, false
	}
	return o.Streak, true
}

// HasStreak returns a boolean if a field has been set.
func (o *ApiGamificationSharePostRequestData) HasStreak() bool {
	if o != nil && !IsNil(o.Streak) {
		return true
	}

	return false
}

// SetStreak gets a reference to the given float32 and assigns it to the Streak field.
func (o *ApiGamificationSharePostRequestData) SetStreak(v float32) {
	o.Streak = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiGamificationSharePostRequestData) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationSharePostRequestData) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiGamificationSharePostRequestData) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiGamificationSharePostRequestData) SetMessage(v string) {
	o.Message = &v
}

func (o ApiGamificationSharePostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGamificationSharePostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Badge) {
		toSerialize["badge"] = o.Badge
	}
	if !IsNil(o.Streak) {
		toSerialize["streak"] = o.Streak
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableApiGamificationSharePostRequestData struct {
	value *ApiGamificationSharePostRequestData
	isSet bool
}

func (v NullableApiGamificationSharePostRequestData) Get() *ApiGamificationSharePostRequestData {
	return v.value
}

func (v *NullableApiGamificationSharePostRequestData) Set(val *ApiGamificationSharePostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGamificationSharePostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGamificationSharePostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGamificationSharePostRequestData(val *ApiGamificationSharePostRequestData) *NullableApiGamificationSharePostRequestData {
	return &NullableApiGamificationSharePostRequestData{value: val, isSet: true}
}

func (v NullableApiGamificationSharePostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGamificationSharePostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


