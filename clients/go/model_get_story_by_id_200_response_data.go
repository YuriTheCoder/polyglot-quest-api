/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetStoryById200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStoryById200ResponseData{}

// GetStoryById200ResponseData struct for GetStoryById200ResponseData
type GetStoryById200ResponseData struct {
	Story *Story `json:"story,omitempty"`
}

// NewGetStoryById200ResponseData instantiates a new GetStoryById200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStoryById200ResponseData() *GetStoryById200ResponseData {
	this := GetStoryById200ResponseData{}
	return &this
}

// NewGetStoryById200ResponseDataWithDefaults instantiates a new GetStoryById200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStoryById200ResponseDataWithDefaults() *GetStoryById200ResponseData {
	this := GetStoryById200ResponseData{}
	return &this
}

// GetStory returns the Story field value if set, zero value otherwise.
func (o *GetStoryById200ResponseData) GetStory() Story {
	if o == nil || IsNil(o.Story) {
		var ret Story
		return ret
	}
	return *o.Story
}

// GetStoryOk returns a tuple with the Story field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStoryById200ResponseData) GetStoryOk() (*Story, bool) {
	if o == nil || IsNil(o.Story) {
		return nil, false
	}
	return o.Story, true
}

// HasStory returns a boolean if a field has been set.
func (o *GetStoryById200ResponseData) HasStory() bool {
	if o != nil && !IsNil(o.Story) {
		return true
	}

	return false
}

// SetStory gets a reference to the given Story and assigns it to the Story field.
func (o *GetStoryById200ResponseData) SetStory(v Story) {
	o.Story = &v
}

func (o GetStoryById200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStoryById200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Story) {
		toSerialize["story"] = o.Story
	}
	return toSerialize, nil
}

type NullableGetStoryById200ResponseData struct {
	value *GetStoryById200ResponseData
	isSet bool
}

func (v NullableGetStoryById200ResponseData) Get() *GetStoryById200ResponseData {
	return v.value
}

func (v *NullableGetStoryById200ResponseData) Set(val *GetStoryById200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStoryById200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStoryById200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStoryById200ResponseData(val *GetStoryById200ResponseData) *NullableGetStoryById200ResponseData {
	return &NullableGetStoryById200ResponseData{value: val, isSet: true}
}

func (v NullableGetStoryById200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStoryById200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


