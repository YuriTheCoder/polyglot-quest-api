/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiUsersStatsGet200ResponseDataMostActiveUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUsersStatsGet200ResponseDataMostActiveUsersInner{}

// ApiUsersStatsGet200ResponseDataMostActiveUsersInner struct for ApiUsersStatsGet200ResponseDataMostActiveUsersInner
type ApiUsersStatsGet200ResponseDataMostActiveUsersInner struct {
	UserId *string `json:"userId,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	TaskCount *int32 `json:"taskCount,omitempty"`
}

// NewApiUsersStatsGet200ResponseDataMostActiveUsersInner instantiates a new ApiUsersStatsGet200ResponseDataMostActiveUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUsersStatsGet200ResponseDataMostActiveUsersInner() *ApiUsersStatsGet200ResponseDataMostActiveUsersInner {
	this := ApiUsersStatsGet200ResponseDataMostActiveUsersInner{}
	return &this
}

// NewApiUsersStatsGet200ResponseDataMostActiveUsersInnerWithDefaults instantiates a new ApiUsersStatsGet200ResponseDataMostActiveUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUsersStatsGet200ResponseDataMostActiveUsersInnerWithDefaults() *ApiUsersStatsGet200ResponseDataMostActiveUsersInner {
	this := ApiUsersStatsGet200ResponseDataMostActiveUsersInner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) SetUserId(v string) {
	o.UserId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) SetEmail(v string) {
	o.Email = &v
}

// GetTaskCount returns the TaskCount field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetTaskCount() int32 {
	if o == nil || IsNil(o.TaskCount) {
		var ret int32
		return ret
	}
	return *o.TaskCount
}

// GetTaskCountOk returns a tuple with the TaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) GetTaskCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskCount) {
		return nil, false
	}
	return o.TaskCount, true
}

// HasTaskCount returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) HasTaskCount() bool {
	if o != nil && !IsNil(o.TaskCount) {
		return true
	}

	return false
}

// SetTaskCount gets a reference to the given int32 and assigns it to the TaskCount field.
func (o *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) SetTaskCount(v int32) {
	o.TaskCount = &v
}

func (o ApiUsersStatsGet200ResponseDataMostActiveUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUsersStatsGet200ResponseDataMostActiveUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.TaskCount) {
		toSerialize["taskCount"] = o.TaskCount
	}
	return toSerialize, nil
}

type NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner struct {
	value *ApiUsersStatsGet200ResponseDataMostActiveUsersInner
	isSet bool
}

func (v NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) Get() *ApiUsersStatsGet200ResponseDataMostActiveUsersInner {
	return v.value
}

func (v *NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) Set(val *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUsersStatsGet200ResponseDataMostActiveUsersInner(val *ApiUsersStatsGet200ResponseDataMostActiveUsersInner) *NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner {
	return &NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner{value: val, isSet: true}
}

func (v NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUsersStatsGet200ResponseDataMostActiveUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


