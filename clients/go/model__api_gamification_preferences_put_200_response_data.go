/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiGamificationPreferencesPut200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGamificationPreferencesPut200ResponseData{}

// ApiGamificationPreferencesPut200ResponseData struct for ApiGamificationPreferencesPut200ResponseData
type ApiGamificationPreferencesPut200ResponseData struct {
	Preferences map[string]interface{} `json:"preferences,omitempty"`
}

// NewApiGamificationPreferencesPut200ResponseData instantiates a new ApiGamificationPreferencesPut200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiGamificationPreferencesPut200ResponseData() *ApiGamificationPreferencesPut200ResponseData {
	this := ApiGamificationPreferencesPut200ResponseData{}
	return &this
}

// NewApiGamificationPreferencesPut200ResponseDataWithDefaults instantiates a new ApiGamificationPreferencesPut200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGamificationPreferencesPut200ResponseDataWithDefaults() *ApiGamificationPreferencesPut200ResponseData {
	this := ApiGamificationPreferencesPut200ResponseData{}
	return &this
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *ApiGamificationPreferencesPut200ResponseData) GetPreferences() map[string]interface{} {
	if o == nil || IsNil(o.Preferences) {
		var ret map[string]interface{}
		return ret
	}
	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGamificationPreferencesPut200ResponseData) GetPreferencesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Preferences) {
		return map[string]interface{}{}, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *ApiGamificationPreferencesPut200ResponseData) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given map[string]interface{} and assigns it to the Preferences field.
func (o *ApiGamificationPreferencesPut200ResponseData) SetPreferences(v map[string]interface{}) {
	o.Preferences = v
}

func (o ApiGamificationPreferencesPut200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGamificationPreferencesPut200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	return toSerialize, nil
}

type NullableApiGamificationPreferencesPut200ResponseData struct {
	value *ApiGamificationPreferencesPut200ResponseData
	isSet bool
}

func (v NullableApiGamificationPreferencesPut200ResponseData) Get() *ApiGamificationPreferencesPut200ResponseData {
	return v.value
}

func (v *NullableApiGamificationPreferencesPut200ResponseData) Set(val *ApiGamificationPreferencesPut200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGamificationPreferencesPut200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGamificationPreferencesPut200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGamificationPreferencesPut200ResponseData(val *ApiGamificationPreferencesPut200ResponseData) *NullableApiGamificationPreferencesPut200ResponseData {
	return &NullableApiGamificationPreferencesPut200ResponseData{value: val, isSet: true}
}

func (v NullableApiGamificationPreferencesPut200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGamificationPreferencesPut200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


