/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiUsersIdToggleStatusPatch200ResponseDataUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUsersIdToggleStatusPatch200ResponseDataUser{}

// ApiUsersIdToggleStatusPatch200ResponseDataUser struct for ApiUsersIdToggleStatusPatch200ResponseDataUser
type ApiUsersIdToggleStatusPatch200ResponseDataUser struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
}

// NewApiUsersIdToggleStatusPatch200ResponseDataUser instantiates a new ApiUsersIdToggleStatusPatch200ResponseDataUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUsersIdToggleStatusPatch200ResponseDataUser() *ApiUsersIdToggleStatusPatch200ResponseDataUser {
	this := ApiUsersIdToggleStatusPatch200ResponseDataUser{}
	return &this
}

// NewApiUsersIdToggleStatusPatch200ResponseDataUserWithDefaults instantiates a new ApiUsersIdToggleStatusPatch200ResponseDataUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUsersIdToggleStatusPatch200ResponseDataUserWithDefaults() *ApiUsersIdToggleStatusPatch200ResponseDataUser {
	this := ApiUsersIdToggleStatusPatch200ResponseDataUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) SetEmail(v string) {
	o.Email = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ApiUsersIdToggleStatusPatch200ResponseDataUser) SetIsActive(v bool) {
	o.IsActive = &v
}

func (o ApiUsersIdToggleStatusPatch200ResponseDataUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUsersIdToggleStatusPatch200ResponseDataUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	return toSerialize, nil
}

type NullableApiUsersIdToggleStatusPatch200ResponseDataUser struct {
	value *ApiUsersIdToggleStatusPatch200ResponseDataUser
	isSet bool
}

func (v NullableApiUsersIdToggleStatusPatch200ResponseDataUser) Get() *ApiUsersIdToggleStatusPatch200ResponseDataUser {
	return v.value
}

func (v *NullableApiUsersIdToggleStatusPatch200ResponseDataUser) Set(val *ApiUsersIdToggleStatusPatch200ResponseDataUser) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUsersIdToggleStatusPatch200ResponseDataUser) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUsersIdToggleStatusPatch200ResponseDataUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUsersIdToggleStatusPatch200ResponseDataUser(val *ApiUsersIdToggleStatusPatch200ResponseDataUser) *NullableApiUsersIdToggleStatusPatch200ResponseDataUser {
	return &NullableApiUsersIdToggleStatusPatch200ResponseDataUser{value: val, isSet: true}
}

func (v NullableApiUsersIdToggleStatusPatch200ResponseDataUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUsersIdToggleStatusPatch200ResponseDataUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


