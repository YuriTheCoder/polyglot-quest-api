/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiUsersIdGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUsersIdGet200ResponseData{}

// ApiUsersIdGet200ResponseData struct for ApiUsersIdGet200ResponseData
type ApiUsersIdGet200ResponseData struct {
	User *User `json:"user,omitempty"`
	TaskStats *ApiUsersIdGet200ResponseDataTaskStats `json:"taskStats,omitempty"`
}

// NewApiUsersIdGet200ResponseData instantiates a new ApiUsersIdGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUsersIdGet200ResponseData() *ApiUsersIdGet200ResponseData {
	this := ApiUsersIdGet200ResponseData{}
	return &this
}

// NewApiUsersIdGet200ResponseDataWithDefaults instantiates a new ApiUsersIdGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUsersIdGet200ResponseDataWithDefaults() *ApiUsersIdGet200ResponseData {
	this := ApiUsersIdGet200ResponseData{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ApiUsersIdGet200ResponseData) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdGet200ResponseData) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ApiUsersIdGet200ResponseData) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *ApiUsersIdGet200ResponseData) SetUser(v User) {
	o.User = &v
}

// GetTaskStats returns the TaskStats field value if set, zero value otherwise.
func (o *ApiUsersIdGet200ResponseData) GetTaskStats() ApiUsersIdGet200ResponseDataTaskStats {
	if o == nil || IsNil(o.TaskStats) {
		var ret ApiUsersIdGet200ResponseDataTaskStats
		return ret
	}
	return *o.TaskStats
}

// GetTaskStatsOk returns a tuple with the TaskStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersIdGet200ResponseData) GetTaskStatsOk() (*ApiUsersIdGet200ResponseDataTaskStats, bool) {
	if o == nil || IsNil(o.TaskStats) {
		return nil, false
	}
	return o.TaskStats, true
}

// HasTaskStats returns a boolean if a field has been set.
func (o *ApiUsersIdGet200ResponseData) HasTaskStats() bool {
	if o != nil && !IsNil(o.TaskStats) {
		return true
	}

	return false
}

// SetTaskStats gets a reference to the given ApiUsersIdGet200ResponseDataTaskStats and assigns it to the TaskStats field.
func (o *ApiUsersIdGet200ResponseData) SetTaskStats(v ApiUsersIdGet200ResponseDataTaskStats) {
	o.TaskStats = &v
}

func (o ApiUsersIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUsersIdGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.TaskStats) {
		toSerialize["taskStats"] = o.TaskStats
	}
	return toSerialize, nil
}

type NullableApiUsersIdGet200ResponseData struct {
	value *ApiUsersIdGet200ResponseData
	isSet bool
}

func (v NullableApiUsersIdGet200ResponseData) Get() *ApiUsersIdGet200ResponseData {
	return v.value
}

func (v *NullableApiUsersIdGet200ResponseData) Set(val *ApiUsersIdGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUsersIdGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUsersIdGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUsersIdGet200ResponseData(val *ApiUsersIdGet200ResponseData) *NullableApiUsersIdGet200ResponseData {
	return &NullableApiUsersIdGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiUsersIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUsersIdGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


