/*
Gamified Task Management API

API REST gamificada para gerenciamento de tarefas com IA, XP, levels e sistema de recompensas

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiUsersStatsGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUsersStatsGet200ResponseData{}

// ApiUsersStatsGet200ResponseData struct for ApiUsersStatsGet200ResponseData
type ApiUsersStatsGet200ResponseData struct {
	Users *ApiUsersStatsGet200ResponseDataUsers `json:"users,omitempty"`
	Tasks *ApiUsersStatsGet200ResponseDataTasks `json:"tasks,omitempty"`
	MostActiveUsers []ApiUsersStatsGet200ResponseDataMostActiveUsersInner `json:"mostActiveUsers,omitempty"`
}

// NewApiUsersStatsGet200ResponseData instantiates a new ApiUsersStatsGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUsersStatsGet200ResponseData() *ApiUsersStatsGet200ResponseData {
	this := ApiUsersStatsGet200ResponseData{}
	return &this
}

// NewApiUsersStatsGet200ResponseDataWithDefaults instantiates a new ApiUsersStatsGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUsersStatsGet200ResponseDataWithDefaults() *ApiUsersStatsGet200ResponseData {
	this := ApiUsersStatsGet200ResponseData{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseData) GetUsers() ApiUsersStatsGet200ResponseDataUsers {
	if o == nil || IsNil(o.Users) {
		var ret ApiUsersStatsGet200ResponseDataUsers
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseData) GetUsersOk() (*ApiUsersStatsGet200ResponseDataUsers, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseData) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given ApiUsersStatsGet200ResponseDataUsers and assigns it to the Users field.
func (o *ApiUsersStatsGet200ResponseData) SetUsers(v ApiUsersStatsGet200ResponseDataUsers) {
	o.Users = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseData) GetTasks() ApiUsersStatsGet200ResponseDataTasks {
	if o == nil || IsNil(o.Tasks) {
		var ret ApiUsersStatsGet200ResponseDataTasks
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseData) GetTasksOk() (*ApiUsersStatsGet200ResponseDataTasks, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseData) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given ApiUsersStatsGet200ResponseDataTasks and assigns it to the Tasks field.
func (o *ApiUsersStatsGet200ResponseData) SetTasks(v ApiUsersStatsGet200ResponseDataTasks) {
	o.Tasks = &v
}

// GetMostActiveUsers returns the MostActiveUsers field value if set, zero value otherwise.
func (o *ApiUsersStatsGet200ResponseData) GetMostActiveUsers() []ApiUsersStatsGet200ResponseDataMostActiveUsersInner {
	if o == nil || IsNil(o.MostActiveUsers) {
		var ret []ApiUsersStatsGet200ResponseDataMostActiveUsersInner
		return ret
	}
	return o.MostActiveUsers
}

// GetMostActiveUsersOk returns a tuple with the MostActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUsersStatsGet200ResponseData) GetMostActiveUsersOk() ([]ApiUsersStatsGet200ResponseDataMostActiveUsersInner, bool) {
	if o == nil || IsNil(o.MostActiveUsers) {
		return nil, false
	}
	return o.MostActiveUsers, true
}

// HasMostActiveUsers returns a boolean if a field has been set.
func (o *ApiUsersStatsGet200ResponseData) HasMostActiveUsers() bool {
	if o != nil && !IsNil(o.MostActiveUsers) {
		return true
	}

	return false
}

// SetMostActiveUsers gets a reference to the given []ApiUsersStatsGet200ResponseDataMostActiveUsersInner and assigns it to the MostActiveUsers field.
func (o *ApiUsersStatsGet200ResponseData) SetMostActiveUsers(v []ApiUsersStatsGet200ResponseDataMostActiveUsersInner) {
	o.MostActiveUsers = v
}

func (o ApiUsersStatsGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUsersStatsGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.MostActiveUsers) {
		toSerialize["mostActiveUsers"] = o.MostActiveUsers
	}
	return toSerialize, nil
}

type NullableApiUsersStatsGet200ResponseData struct {
	value *ApiUsersStatsGet200ResponseData
	isSet bool
}

func (v NullableApiUsersStatsGet200ResponseData) Get() *ApiUsersStatsGet200ResponseData {
	return v.value
}

func (v *NullableApiUsersStatsGet200ResponseData) Set(val *ApiUsersStatsGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUsersStatsGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUsersStatsGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUsersStatsGet200ResponseData(val *ApiUsersStatsGet200ResponseData) *NullableApiUsersStatsGet200ResponseData {
	return &NullableApiUsersStatsGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiUsersStatsGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUsersStatsGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


